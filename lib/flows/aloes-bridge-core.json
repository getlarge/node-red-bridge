[
    {
        "id": "35be4516.a176d2",
        "type": "subflow",
        "name": "aloes-status",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 100,
                "y": 160,
                "wires": [
                    {
                        "id": "bf64c9a2.9fc9f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 980,
                "y": 380,
                "wires": [
                    {
                        "id": "3a2a8728.3afa1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "29a7420a.79cee6",
        "type": "change",
        "z": "35be4516.a176d2",
        "name": "aloesClientStatus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::aloesClientStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "ab7b6113.5c5f48"
            ]
        ]
    },
    {
        "id": "ab7b6113.5c5f48",
        "type": "ui_template",
        "z": "35be4516.a176d2",
        "group": "8e0c00bc.0d5d28",
        "name": "aloes-status-icon",
        "order": 1,
        "width": "6",
        "height": "1",
        "format": "<!DOCTYPE html>\n<svg viewBox=\"0 0 270 40\" id=\"{{'aloes-status-'+ $id}}\">\n    <text x=\"0\" y=\"25\">{{'aloes status : ' + $statusText}}</text>\n    <circle id=\"{{'aloes-status-icon-'+$id}}\" x=\"0\" y=\"0\" cx=\"250\" cy=\"20\" r=\"15\" fill=\"{{$statusColor}}\" ></circle>\n</svg>\n<script>\n(function(scope) {\n  scope.$watch('msg', (msg) => {\n    try{\n        scope.$statusText = \"offline\";\n        scope.$statusColor = \"#ff4500\";\n        if (msg && (msg.payload === true || msg.payload === \"true\")) {\n            scope.$statusColor = \"#baff00\";\n            scope.$statusText = \"online\";\n        }\n        return msg;\n    } catch(error){\n        throw error;\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 790,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "86f990f8.0ad3a8",
        "type": "change",
        "z": "35be4516.a176d2",
        "name": "devicesStatus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::devicesStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 220,
        "wires": [
            [
                "3e97b26c.02f12e"
            ]
        ]
    },
    {
        "id": "3e97b26c.02f12e",
        "type": "ui_template",
        "z": "35be4516.a176d2",
        "group": "8e0c00bc.0d5d28",
        "name": "device-status-icon",
        "order": 3,
        "width": "6",
        "height": "1",
        "format": "<!DOCTYPE html>\n<svg viewBox=\"0 0 270 40\" id=\"{{'status-'+ $id}}\">\n    <text x=\"0\" y=\"25\">{{'device status : ' + $statusText}}</text>\n    <circle id=\"{{'status-icon-'+$id}}\" x=\"0\" y=\"0\" cx=\"250\" cy=\"20\" r=\"15\" fill=\"{{$statusColor}}\" ></circle>\n</svg>\n<script>\n(function(scope) {\n  scope.$watch('msg', (msg) => {\n    try{\n        scope.$statusText = \"Waiting\";\n        scope.$statusColor = \"#ff4500\";\n        if (msg && (msg.payload === true || msg.payload === \"true\")) {\n            scope.$statusColor = \"#baff00\";\n            scope.$statusText = \"Ready\";\n        }\n        return msg;\n    } catch(error){\n        throw error;\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 790,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "3a2a8728.3afa1",
        "type": "ui_button",
        "z": "35be4516.a176d2",
        "name": "refresh state",
        "group": "8e0c00bc.0d5d28",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 790,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "4defaf20.f9cd8",
        "type": "ui_dropdown",
        "z": "35be4516.a176d2",
        "name": "devicesSelection",
        "label": "Devices selection",
        "tooltip": "",
        "place": "Select option",
        "group": "8e0c00bc.0d5d28",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 790,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5cdd84f8.fcab24",
        "type": "change",
        "z": "35be4516.a176d2",
        "name": "devicesSelection",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "#:(file)::devicesSelection",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "4defaf20.f9cd8"
            ]
        ]
    },
    {
        "id": "bf64c9a2.9fc9f",
        "type": "delay",
        "z": "35be4516.a176d2",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "29a7420a.79cee6",
                "86f990f8.0ad3a8",
                "5cdd84f8.fcab24"
            ]
        ]
    },
    {
        "id": "8e0c00bc.0d5d28",
        "type": "ui_group",
        "z": "",
        "name": "status",
        "tab": "c8302d17.78ec3",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c8302d17.78ec3",
        "type": "ui_tab",
        "z": "",
        "name": "status",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2081b405.5d4b6c",
        "type": "subflow",
        "name": "ui-router",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 400,
                "wires": [
                    {
                        "id": "d33a14fa.c95998"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 220,
                "wires": [
                    {
                        "id": "fa949cdc.c7a088",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1160,
                "y": 320,
                "wires": [
                    {
                        "id": "3783d2c9.d8ffb6",
                        "port": 0
                    },
                    {
                        "id": "5b3fba5.facef44",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1160,
                "y": 500,
                "wires": []
            }
        ],
        "env": [],
        "outputLabels": [
            "game",
            "devices",
            "settings"
        ]
    },
    {
        "id": "e409ffe3.71382",
        "type": "comment",
        "z": "2081b405.5d4b6c",
        "name": "INPUT",
        "info": "- receive tabs ( pages ) changes events.\n\n- validate group diplay based on each tab accessed and global state",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "d33a14fa.c95998",
        "type": "switch",
        "z": "2081b405.5d4b6c",
        "name": "tab name",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "devices",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 280,
        "y": 400,
        "wires": [
            [
                "fa949cdc.c7a088"
            ],
            [
                "56cdd7ba.34d86"
            ],
            [
                "907099f5.39de4"
            ]
        ]
    },
    {
        "id": "de943733.e9ae08",
        "type": "ui_ui_control",
        "z": "2081b405.5d4b6c",
        "name": "init-ui",
        "x": 990,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "907099f5.39de4",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "showAuth",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"settings_auth\"],\"hide\":[\"settings_aloes\",\"settings_node-red\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 500,
        "wires": [
            [
                "de943733.e9ae08"
            ]
        ]
    },
    {
        "id": "f9701c29.07f8e",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "showContent",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"settings_auth\"],\"show\":[\"settings_aloes\",\"settings_node-red\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "de943733.e9ae08"
            ]
        ]
    },
    {
        "id": "7d861f97.b45e8",
        "type": "function",
        "z": "2081b405.5d4b6c",
        "name": "",
        "func": "try {\n    let sequenceIsValid = false;\n    let tooManyAttempts = false;\n    let number1;\n    flow.get(\"number1\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number1 = res;\n    })\n    let number2;\n    flow.get(\"number2\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number2 = res;\n    })\n    let number3;\n    flow.get(\"number3\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number3 = res;\n    })\n    \n    if (number1 === 1 && number2 === 1 && number3 === 2) {\n        sequenceIsValid = true;\n    }\n    // increment countdown\n    if (sequenceIsValid === true) {\n        return msg;\n    } \n    return null;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 560,
        "wires": [
            [
                "f9701c29.07f8e"
            ]
        ]
    },
    {
        "id": "740aa84f.39127",
        "type": "ui_button",
        "z": "2081b405.5d4b6c",
        "name": "",
        "group": "90e66c08.82ba8",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "validate",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "7d861f97.b45e8"
            ]
        ]
    },
    {
        "id": "42f2eca3.7fa51c",
        "type": "ui_numeric",
        "z": "2081b405.5d4b6c",
        "name": "number1",
        "label": "",
        "tooltip": "",
        "group": "90e66c08.82ba8",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 120,
        "y": 620,
        "wires": [
            [
                "c038bb9c.1b9928"
            ]
        ]
    },
    {
        "id": "24a2c4a3.4e9614",
        "type": "ui_numeric",
        "z": "2081b405.5d4b6c",
        "name": "number2",
        "label": "",
        "tooltip": "",
        "group": "90e66c08.82ba8",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 120,
        "y": 660,
        "wires": [
            [
                "397c105d.fc2f88"
            ]
        ]
    },
    {
        "id": "57ef0d5c.45d9fc",
        "type": "ui_numeric",
        "z": "2081b405.5d4b6c",
        "name": "number3",
        "label": "",
        "tooltip": "",
        "group": "90e66c08.82ba8",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 120,
        "y": 700,
        "wires": [
            [
                "27862323.2707f4"
            ]
        ]
    },
    {
        "id": "c038bb9c.1b9928",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "397c105d.fc2f88",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "27862323.2707f4",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "1edc4303.d1a59d",
        "type": "ui_text_input",
        "z": "2081b405.5d4b6c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "90e66c08.82ba8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "a6eab0a4.8d6e3"
            ]
        ]
    },
    {
        "id": "a6eab0a4.8d6e3",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "adminPass",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "5b3fba5.facef44",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "setDeviceTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "Device",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "collection",
                "pt": "msg",
                "to": "Trigger",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f240aa5.0efe358",
        "type": "debug",
        "z": "2081b405.5d4b6c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "56cdd7ba.34d86",
        "type": "function",
        "z": "2081b405.5d4b6c",
        "name": "showDevicesSelection",
        "func": "try {\n    const storeType = env.get(\"store_type\") || \"file\";\n    const storeType2 = env.get(\"store_type2\") || \"memoryOnly\";\n    let devicesSelection;\n    global.get(\"devicesSelection\", storeType, (err,res) => {\n        if (err) throw err;\n        devicesSelection = res;\n    });\n    let devicesList;\n    global.get(\"devicesList\", storeType2, (err,res) => {\n        if (err) throw err;\n        devicesList = res;\n    });\n    msg.payload = {group: {hide: [], show : []}};\n    msg.devicesList = devicesList;\n    msg.showList = [];\n    msg.hideList = [];\n    delete msg.socketid;\n    delete msg.socketip;\n    delete msg.tab;\n    devicesList.forEach(deviceName => {\n        if (devicesSelection.find(dev => dev === deviceName)) {\n            msg.showList.push(`${deviceName}`);\n            msg.payload.group.show.push(`devices_${deviceName}`);\n        } else {\n            msg.hideList.push(`${deviceName}`);\n            msg.payload.group.hide.push(`devices_${deviceName}`);\n        }\n    });\n    return msg;\n} catch(error){\n    return null;\n} \n\n        ",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "de943733.e9ae08",
                "793bd27b.118d74"
            ]
        ]
    },
    {
        "id": "793bd27b.118d74",
        "type": "function",
        "z": "2081b405.5d4b6c",
        "name": "showListUpdate",
        "func": "try {\n    if (!msg.showList) return null;\n    msg.devicesList.forEach(deviceName => node.send({deviceName, topic: `refresh/${deviceName}`}));\n    //  msg.showList.forEach(deviceName => node.send({deviceName, topic: `refresh/device/${deviceName}`}));\n} catch(error){\n    return null;\n} \n\n        ",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 340,
        "wires": [
            [
                "5b3fba5.facef44",
                "3783d2c9.d8ffb6"
            ]
        ]
    },
    {
        "id": "3783d2c9.d8ffb6",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "setSensorTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "Sensor",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "collection",
                "pt": "msg",
                "to": "Trigger",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "fa949cdc.c7a088",
        "type": "change",
        "z": "2081b405.5d4b6c",
        "name": "setStatusTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "90e66c08.82ba8",
        "type": "ui_group",
        "z": "",
        "name": "auth",
        "tab": "a92aa2d9.26d21",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5888280d.dff488",
        "type": "subflow",
        "name": "set-device-status",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 80,
                "y": 200,
                "wires": [
                    {
                        "id": "f85c8f7c.5a7168"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 200,
                "wires": [
                    {
                        "id": "5f8bafa8.bd415",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "store_type",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "62af2afc.55df94",
        "type": "function",
        "z": "5888280d.dff488",
        "name": "setDevicesStatus",
        "func": "try {\n    const debug = env.get(\"debug\");\n    const storeType = env.get(\"store_type\") || \"file\";\n    const storeType2 = \"memoryOnly\";\n    // based on selected devices for the scenario\n    // read devices status in memory\n    let devicesSelection = [];\n    global.get(\"devicesSelection\", storeType, (err,res) => {\n        if (err) throw err;\n        devicesSelection = res;\n    });\n    let devicesStatus = true;\n    if (debug) {\n        console.log(\"setDevicesStatus:req\", devicesSelection);\n    }\n    if (!devicesSelection) {\n        global.set(\"devicesSelection\", [], storeType, err => {\n            if (err) throw err;\n        });\n        devicesStatus = true;\n    } else if (devicesSelection.length < 1) {\n        devicesStatus = true;\n    } else {\n        const validators = devicesSelection.map(deviceName => {\n            let device;\n            global.get(`device-${deviceName}`, storeType2, (err, res) => {\n                if (err) throw err;\n                device = res;\n            });\n            if (device && device.status) {\n                return true;\n            }\n            return false;\n        });\n        if (validators.some(v => v === false)) {\n            devicesStatus = false;\n        } else {\n            devicesStatus = true;\n        }\n    }\n    if (debug) {\n        console.log(\"setDevicesStatus:res\", devicesStatus);\n    }\n    global.set(\"devicesStatus\", devicesStatus, storeType, err => {\n        if (err) throw err;\n    });\n    msg.devicesStatus = devicesStatus;\n    return msg;\n} catch(error){\n    return error;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 200,
        "wires": [
            [
                "5f8bafa8.bd415"
            ]
        ]
    },
    {
        "id": "f85c8f7c.5a7168",
        "type": "delay",
        "z": "5888280d.dff488",
        "name": "debounce",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 200,
        "y": 200,
        "wires": [
            [
                "156d5733.0b85b1"
            ]
        ]
    },
    {
        "id": "156d5733.0b85b1",
        "type": "delay",
        "z": "5888280d.dff488",
        "name": "",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "62af2afc.55df94"
            ]
        ]
    },
    {
        "id": "5f8bafa8.bd415",
        "type": "change",
        "z": "5888280d.dff488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9d9cc747.bb803",
        "type": "subflow",
        "name": "save-settings",
        "info": "",
        "category": "server",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "1f896d83.626d12"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 140,
                "wires": [
                    {
                        "id": "dc998099.cce658",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "store_type",
                "type": "env",
                "value": ""
            }
        ],
        "icon": "node-red/file-out.png"
    },
    {
        "id": "f0cf6fba.e0eb8",
        "type": "function",
        "z": "9d9cc747.bb803",
        "name": "update-env-file",
        "func": "const storeType = env.get(\"store_type\") || \"memory\";\nconst processEnv = global.get(\"processEnv\", storeType);\nif (!processEnv) throw new Error(\"process.env not available\");\nif (!processEnv.NODE_ENV) {\n    msg.filename = \"./.env\";\n} else {\n    msg.filename = `./deploy/.env_${processEnv.NODE_ENV}`;\n}\nmsg.payload = `NODE_ENV=${env.get(\"NODE_ENV\")}\nNODE_NAME=${env.get(\"NODE_NAME\")}\nNODE_RED_URL=${env.get(\"NODE_RED_URL\")}\nNODE_RED_HOST=${env.get(\"NODE_RED_HOST\")}\nNODE_RED_PORT=${env.get(\"NODE_RED_PORT\")}\nNODE_RED_ADMIN_ROOT=${env.get(\"NODE_RED_ADMIN_ROOT\")}\nNODE_RED_API_ROOT=${env.get(\"NODE_RED_API_ROOT\")}\nNODE_RED_UI_PATH=${env.get(\"NODE_RED_UI_PATH\")}\nNODE_RED_USER_DIR=${env.get(\"NODE_RED_USER_DIR\")}\nNODE_RED_USERNAME=${env.get(\"NODE_RED_USERNAME\")}\nNODE_RED_USERPASS=${env.get(\"NODE_RED_USERPASS\")}\nNODE_RED_PASSHASH=${env.get(\"NODE_RED_PASSHASH\")}\nNODE_RED_ADMIN_PASSHASH=${env.get(\"NODE_RED_ADMIN_PASSHASH\")}\nNODE_RED_SESSION_SECRET=${env.get(\"NODE_RED_SESSION_SECRET\")}\nNODE_RED_CREDENTIAL_SECRET=${env.get(\"NODE_RED_CREDENTIAL_SECRET\")}\nNODE_RED_STORE_TYPE=${env.get(\"NODE_RED_STORE_TYPE\")}\nALOES_USER_EMAIL=${env.get(\"ALOES_USER_EMAIL\")}\nALOES_USER_PASSWORD=${env.get(\"ALOES_USER_PASSWORD\")}\nEXTERNAL_MODULES=${env.get(\"EXTERNAL_MODULES\")}\nSERVER_LOGGER_LEVEL=${env.get(\"SERVER_LOGGER_LEVEL\")}\nTUNNEL_URL=${env.get(\"TUNNEL_URL\")}\nGIT_REPO_SSH_URL=${env.get(\"GIT_REPO_SSH_URL\")}\nVPS_HOST=${env.get(\"VPS_HOST\")}\nVPS_USER=${env.get(\"VPS_USER\")}`\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "dc998099.cce658"
            ]
        ]
    },
    {
        "id": "dc998099.cce658",
        "type": "file",
        "z": "9d9cc747.bb803",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "7e73d6b2.6ca8e8"
            ]
        ]
    },
    {
        "id": "4d045224.66bd04",
        "type": "ui_toast",
        "z": "9d9cc747.bb803",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 707,
        "y": 257,
        "wires": []
    },
    {
        "id": "7e73d6b2.6ca8e8",
        "type": "function",
        "z": "9d9cc747.bb803",
        "name": "buildNotif",
        "func": "msg.payload = \"Environment variables file updated, please restart app to validate them.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "4d045224.66bd04"
            ]
        ]
    },
    {
        "id": "1f896d83.626d12",
        "type": "delay",
        "z": "9d9cc747.bb803",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 220,
        "y": 140,
        "wires": [
            [
                "f0cf6fba.e0eb8"
            ]
        ]
    },
    {
        "id": "30f4a499.4b3d84",
        "type": "subflow",
        "name": "node-red-settings",
        "info": "",
        "category": "server",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "a32f8c2.d9e527"
                    },
                    {
                        "id": "fb89aa6a.36265"
                    },
                    {
                        "id": "e9d47336.02eab8"
                    },
                    {
                        "id": "df2f8f91.2a262"
                    },
                    {
                        "id": "81806b3.7724298"
                    },
                    {
                        "id": "588da5cb.0fb8a4"
                    },
                    {
                        "id": "dc0bf44.4a21188"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 540,
                "wires": [
                    {
                        "id": "aa6f44b1.31c45",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1060,
                "y": 600,
                "wires": [
                    {
                        "id": "676c9b4.bbfd364",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NODE_RED_URL",
                "type": "env",
                "value": "NODE_RED_URL"
            },
            {
                "name": "NODE_RED_HOST",
                "type": "env",
                "value": "NODE_RED_HOST"
            },
            {
                "name": "NODE_RED_PORT",
                "type": "env",
                "value": "NODE_RED_PORT"
            },
            {
                "name": "NODE_RED_ADMIN_ROOT",
                "type": "env",
                "value": "NODE_RED_ADMIN_ROOT"
            },
            {
                "name": "NODE_RED_API_ROOT",
                "type": "env",
                "value": "NODE_RED_API_ROOT"
            },
            {
                "name": "TUNNEL_URL",
                "type": "env",
                "value": "TUNNEL_URL"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": ""
            }
        ],
        "icon": "font-awesome/fa-cog"
    },
    {
        "id": "a32f8c2.d9e527",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedHost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_HOST",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "80fbac5f.cfb318"
            ]
        ]
    },
    {
        "id": "27c876e3.a7bbca",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedHost",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedHost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "80fbac5f.cfb318",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "HTTP Host",
        "tooltip": "",
        "group": "3f33740d.763dcc",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "27c876e3.a7bbca"
            ]
        ]
    },
    {
        "id": "e9d47336.02eab8",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedPort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_PORT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "14df103b.f1aae"
            ]
        ]
    },
    {
        "id": "58b6bd7d.9f3c14",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedPort",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedPort",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "14df103b.f1aae",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "HTTP Port",
        "tooltip": "",
        "group": "3f33740d.763dcc",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "58b6bd7d.9f3c14"
            ]
        ]
    },
    {
        "id": "fb89aa6a.36265",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedUrl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_URL",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 100,
        "wires": [
            [
                "e30c10b3.0f9d8"
            ]
        ]
    },
    {
        "id": "5e3e602.fe386a",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedUrl",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedUrl",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e30c10b3.0f9d8",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "HTTP URL",
        "tooltip": "",
        "group": "3f33740d.763dcc",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 100,
        "wires": [
            [
                "5e3e602.fe386a"
            ]
        ]
    },
    {
        "id": "df2f8f91.2a262",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedAdminRoot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_ADMIN_ROOT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 220,
        "wires": [
            [
                "77fdbbdf.ba287c"
            ]
        ]
    },
    {
        "id": "5ff56a76.3f9664",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedAdminRoot",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedAdminRoot",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "77fdbbdf.ba287c",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "HTTP Admin Root",
        "tooltip": "URL/<admin root>",
        "group": "3f33740d.763dcc",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "5ff56a76.3f9664"
            ]
        ]
    },
    {
        "id": "4dc438fd.5b8838",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "HTTP API Root",
        "tooltip": "URL/<api root>",
        "group": "3f33740d.763dcc",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "384e2df0.30dffa"
            ]
        ]
    },
    {
        "id": "81806b3.7724298",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedApiRoot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_API_ROOT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "4dc438fd.5b8838"
            ]
        ]
    },
    {
        "id": "384e2df0.30dffa",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedApiRoot",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedApiRoot",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4696a3fb.c13104",
        "type": "debug",
        "z": "30f4a499.4b3d84",
        "name": "NodeRedSettingsUpdate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 890,
        "y": 500,
        "wires": []
    },
    {
        "id": "676c9b4.bbfd364",
        "type": "ui_button",
        "z": "30f4a499.4b3d84",
        "name": "",
        "group": "3f33740d.763dcc",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Restart app",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"requestUrl\":\"restart\",\"method\":\"GET\"}",
        "payloadType": "json",
        "topic": "",
        "x": 450,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "bd9ded23.8ba698",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "Tunnel URL",
        "tooltip": "leave empty for no tunnel; starts with https://..",
        "group": "3f33740d.763dcc",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 300,
        "wires": [
            [
                "ee978cf3.70649"
            ]
        ]
    },
    {
        "id": "588da5cb.0fb8a4",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "tunnelUrl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "TUNNEL_URL",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 300,
        "wires": [
            [
                "bd9ded23.8ba698"
            ]
        ]
    },
    {
        "id": "ee978cf3.70649",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "tunnelUrl",
        "rules": [
            {
                "t": "set",
                "p": "tunnelUrl",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "dcd998e.3c53568",
        "type": "ui_button",
        "z": "30f4a499.4b3d84",
        "name": "",
        "group": "3f33740d.763dcc",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "86d1ede3.72c66"
            ]
        ]
    },
    {
        "id": "aa6f44b1.31c45",
        "type": "function",
        "z": "30f4a499.4b3d84",
        "name": "set-node-red-env",
        "func": "const storeType = env.get(\"store_type\") || \"memoryOnly\";\nconst processEnv = global.get(\"processEnv\", storeType);\nif (!processEnv) throw new Error(\"process.env unavailable\");\nconst nodeRedUrl = flow.get(\"nodeRedUrl\")\nif (nodeRedUrl) {\n    processEnv.NODE_RED_URL = nodeRedUrl;\n}  \nconst nodeRedPort = flow.get(\"nodeRedPort\")\nif (nodeRedPort) {\n    processEnv.NODE_RED_PORT = nodeRedPort;\n}\nconst nodeRedHost = flow.get(\"nodeRedHost\")\nif (nodeRedHost) {\n    processEnv.NODE_RED_HOST = nodeRedHost;\n}  \nconst nodeRedAdminRoot = flow.get(\"nodeRedAdminRoot\")\nif (nodeRedAdminRoot) {\n    processEnv.NODE_RED_ADMIN_ROOT = nodeRedAdminRoot;\n} \nconst nodeRedApiRoot = flow.get(\"nodeRedApiRoot\")\nif (nodeRedApiRoot) {\n    processEnv.NODE_RED_API_ROOT = nodeRedApiRoot;\n}\nconst nodeRedUsername = flow.get(\"nodeRedUsername\")\nif (nodeRedUsername) {\n    processEnv.NODE_RED_USERNAME = nodeRedUsername;\n}\nconst nodeRedPassword = flow.get(\"nodeRedPassword\")\nif (nodeRedPassword) {\n    processEnv.NODE_RED_USERPASS = nodeRedPassword;\n}\nconst tunnelUrl = flow.get(\"tunnelUrl\")\nif (tunnelUrl) {\n    processEnv.TUNNEL_URL = tunnelUrl;\n}\nif (env.get(\"debug\")) {\n    return [msg,msg];\n}\nreturn [msg,null];\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 750,
        "y": 540,
        "wires": [
            [],
            [
                "4696a3fb.c13104"
            ]
        ]
    },
    {
        "id": "86d1ede3.72c66",
        "type": "delay",
        "z": "30f4a499.4b3d84",
        "name": "1msg/3s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 580,
        "y": 540,
        "wires": [
            [
                "aa6f44b1.31c45"
            ]
        ]
    },
    {
        "id": "84fc08b6.5a93d8",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "User",
        "tooltip": "user to connect on /app/ui",
        "group": "3f33740d.763dcc",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "1ba5d38a.fba554"
            ]
        ]
    },
    {
        "id": "dc0bf44.4a21188",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedUsername",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_USERNAME",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 340,
        "wires": [
            [
                "84fc08b6.5a93d8"
            ]
        ]
    },
    {
        "id": "edde95ee.b39e18",
        "type": "ui_text_input",
        "z": "30f4a499.4b3d84",
        "name": "",
        "label": "Pass",
        "tooltip": "password to connect on /app/ui",
        "group": "3f33740d.763dcc",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "23a1e0d7.25b378"
            ]
        ]
    },
    {
        "id": "1ba5d38a.fba554",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedUsername",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedUsername",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "23a1e0d7.25b378",
        "type": "change",
        "z": "30f4a499.4b3d84",
        "name": "nodeRedPassword",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedPassword",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "3f33740d.763dcc",
        "type": "ui_group",
        "z": "30f4a499.4b3d84",
        "name": "node-red",
        "tab": "a92aa2d9.26d21",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a92aa2d9.26d21",
        "type": "ui_tab",
        "z": "",
        "name": "settings",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2e223102.3cf776",
        "type": "subflow",
        "name": "http-api",
        "info": "",
        "category": "server",
        "in": [
            {
                "x": 120,
                "y": 320,
                "wires": [
                    {
                        "id": "fda78413.c59978"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 320,
                "wires": [
                    {
                        "id": "af3667b4.df845",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "node_red_admin_passhash",
                "type": "env",
                "value": "NODE_RED_ADMIN_PASSHASH"
            },
            {
                "name": "node_red_host",
                "type": "env",
                "value": "NODE_RED_HOST"
            },
            {
                "name": "node_red_port",
                "type": "env",
                "value": "NODE_RED_PORT"
            },
            {
                "name": "node_red_url",
                "type": "env",
                "value": "NODE_RED_URL"
            },
            {
                "name": "node_red_api_root",
                "type": "env",
                "value": "NODE_RED_API_ROOT"
            },
            {
                "name": "game_session_name",
                "type": "env",
                "value": "GAME_SESSION_NAME"
            }
        ],
        "icon": "font-awesome/fa-cloud"
    },
    {
        "id": "cc9e9f4e.63f598",
        "type": "http response",
        "z": "2e223102.3cf776",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "d631f9ce.6c9b98",
        "type": "function",
        "z": "2e223102.3cf776",
        "name": "Set Content-Type header",
        "func": "msg.headers = {\n    \"Content-Type\":\"image/jpeg\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "cc9e9f4e.63f598"
            ]
        ]
    },
    {
        "id": "61a99d4b.f26984",
        "type": "file in",
        "z": "2e223102.3cf776",
        "name": "",
        "filename": "/tmp/example.jpg",
        "format": "",
        "sendError": true,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "d631f9ce.6c9b98"
            ]
        ]
    },
    {
        "id": "e54dce65.cf90b",
        "type": "http in",
        "z": "2e223102.3cf776",
        "name": "",
        "url": "/testImage",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "61a99d4b.f26984"
            ]
        ]
    },
    {
        "id": "ee4eaa74.4baca8",
        "type": "comment",
        "z": "2e223102.3cf776",
        "name": "HTTP API",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "af3667b4.df845",
        "type": "http request",
        "z": "2e223102.3cf776",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 570,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fda78413.c59978",
        "type": "function",
        "z": "2e223102.3cf776",
        "name": "set-internal-request",
        "func": "try {\n    const host = env.get(\"node_red_host\");\n    const port = env.get(\"node_red_port\");\n    const apiRoot = env.get(\"node_red_api_root\");\n    const url = env.get(\"node_red_url\");\n    const token = env.get(\"node_red_admin_passhash\");\n    //  console.log(\"token\", token)\n    //  msg.url = `http://${host}:${port}/${apiRoot}/start`;\n    if (!token) throw new Error(\"No token retrieved\");\n    let reqUrl;\n    //  console.log(\"payload\", msg.payload)\n    if (msg.payload.requestUrl) {\n        reqUrl = msg.payload.requestUrl;\n    } else {\n        reqUrl = \"start\";\n    }\n    let method;\n    if (msg.payload.method) {\n        method = msg.payload.method;\n    } else {\n        method = \"GET\";\n    }\n    msg.url = `${url}/${reqUrl}`;\n    msg.method = method;\n    msg.headers = {};\n    msg.headers['Authorization'] = token;\n    msg.headers['Accept'] = \"application/json\";\n    msg.headers['Content-Type'] = \"application/json\";\n    msg.headers['x-access-token'] = token;\n    console.log(\"url\", msg.url)\n    console.log(\"headers\", msg.headers)\n\n    if (msg.payload.query) {\n        //  msg.body = msg.payload.query;\n        const query = JSON.stringify(msg.payload.query);\n        msg.payload = query;\n        console.log(\"payload\", msg.payload)\n    } else {\n        msg.payload = {token, userId: 'test'};\n    }\n    //  msg.query = {filter};\n    return msg;\n} catch(error) {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 320,
        "wires": [
            [
                "af3667b4.df845"
            ]
        ]
    },
    {
        "id": "b11498a.48620e8",
        "type": "tab",
        "label": "Core",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6c72a4ba.29e05c",
        "type": "comment",
        "z": "b11498a.48620e8",
        "name": "Global rules",
        "info": "",
        "x": 810,
        "y": 80,
        "wires": []
    },
    {
        "id": "66b067eb.6a3f4",
        "type": "comment",
        "z": "b11498a.48620e8",
        "name": "MQTT IN",
        "info": "- Declare device by using aloes-device node\n\n- Fill settings with device-id and device-name from Aloes\n- Link the output to a custom interfaces/scenario flow",
        "x": 140,
        "y": 520,
        "wires": []
    },
    {
        "id": "cf9d38fb.b17e7",
        "type": "inject",
        "z": "b11498a.48620e8",
        "name": "Refresh state",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "29dda125.84a71e"
            ]
        ]
    },
    {
        "id": "1215d2c5.d719f5",
        "type": "comment",
        "z": "b11498a.48620e8",
        "name": "Initialization",
        "info": "",
        "x": 150,
        "y": 80,
        "wires": []
    },
    {
        "id": "c156e518.05d988",
        "type": "subflow:2e223102.3cf776",
        "z": "b11498a.48620e8",
        "name": "",
        "env": [],
        "x": 260,
        "y": 1200,
        "wires": [
            [
                "f9b525b6.538f98"
            ]
        ]
    },
    {
        "id": "4d4e0d86.fc7644",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "aloes-client-rx->",
        "links": [
            "10aa970f.91a6a9",
            "258a7e01.840692",
            "3349a57a.fdd2ca",
            "38006924.8252c6",
            "4ec4209b.eb979",
            "7e44def5.a8a58",
            "a66e0af6.7ebf78",
            "b51d6807.52f3e8",
            "fef26247.8b1b3",
            "6694b0b9.bfc068",
            "5b659281.5811a4"
        ],
        "x": 315,
        "y": 800,
        "wires": []
    },
    {
        "id": "917c3eb.e666b4",
        "type": "status",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-in status",
        "scope": [
            "a6c154b9.d44ac8"
        ],
        "x": 180,
        "y": 660,
        "wires": [
            [
                "f6b85404.fab588",
                "27a0dd91.1373ba"
            ]
        ]
    },
    {
        "id": "f6b85404.fab588",
        "type": "debug",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-in status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 380,
        "y": 660,
        "wires": []
    },
    {
        "id": "e6f5573c.4db66",
        "type": "status",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-out status",
        "scope": [
            "217651cb.fb5fbe"
        ],
        "x": 800,
        "y": 640,
        "wires": [
            [
                "fe27e2f4.946fd"
            ]
        ]
    },
    {
        "id": "fe27e2f4.946fd",
        "type": "debug",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-out status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "73b96f2d.86fce8",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "get-resources->",
        "links": [
            "10aa970f.91a6a9",
            "258a7e01.840692",
            "3349a57a.fdd2ca",
            "38006924.8252c6",
            "4ec4209b.eb979",
            "7e44def5.a8a58",
            "a66e0af6.7ebf78",
            "b51d6807.52f3e8",
            "fef26247.8b1b3",
            "5b659281.5811a4"
        ],
        "x": 495,
        "y": 400,
        "wires": []
    },
    {
        "id": "22ba924d.6a4346",
        "type": "catch",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-in error",
        "scope": [
            "a6c154b9.d44ac8"
        ],
        "uncaught": false,
        "x": 170,
        "y": 600,
        "wires": [
            [
                "1ab11c31.98ec14"
            ]
        ]
    },
    {
        "id": "1ab11c31.98ec14",
        "type": "debug",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-in error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 380,
        "y": 600,
        "wires": []
    },
    {
        "id": "1d04524f.af3386",
        "type": "catch",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-out error",
        "scope": [
            "217651cb.fb5fbe"
        ],
        "uncaught": false,
        "x": 800,
        "y": 589,
        "wires": [
            [
                "2c1ccdfb.aaf3c2"
            ]
        ]
    },
    {
        "id": "2c1ccdfb.aaf3c2",
        "type": "debug",
        "z": "b11498a.48620e8",
        "name": "Aloes-Client-out error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1010,
        "y": 589,
        "wires": []
    },
    {
        "id": "27a0dd91.1373ba",
        "type": "function",
        "z": "b11498a.48620e8",
        "name": "update-client-status",
        "func": "try {\n    const storeType = \"file\";\n    let status = false;\n    if (msg.status && msg.status.text && msg.status.text.startsWith(\"node-red:common.status.\")) {\n        if (msg.status.text.endsWith(\"disconnected\")) {\n            status = false;\n        } else if (msg.status.text.endsWith(\"connected\")) {\n            status = true;\n        } \n    }\n    const storeKey = `aloesClientStatus`;\n    let prevConnStatus;\n    global.get(storeKey, storeType, (err, res) => {\n        if(err) throw err;\n        prevConnStatus = res\n    });\n    \n    if (!status || status !== prevConnStatus) {\n        // change Client Id\n        const userId = env.get(\"ALOES_USER_ID\");\n        const clientId = `${userId}-${Math.random().toString(16).substr(2, 8)}`;\n        flow.set(\"client-id\", clientId);\n        const processEnv = global.get(\"processEnv\");\n        if (processEnv) processEnv.ALOES_CLIENT_ID = clientId;\n    } else {\n        const clientId = flow.get(\"client-id\") || `${env.get(\"ALOES_USER_ID\")}-${Math.random().toString(16).substr(2, 8)}`;\n        const processEnv = global.get(\"processEnv\");\n        if (processEnv) processEnv.ALOES_CLIENT_ID = clientId;\n    }\n    \n    global.set(storeKey, status, storeType, (err) => {\n        if(err) throw err;\n    });\n    return msg;\n} catch(error){\n    //  console.log('error', error);\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "fa33bfb3.d51478",
        "type": "link in",
        "z": "b11498a.48620e8",
        "name": "->node-red-http-in",
        "links": [
            "15472e41.e35132",
            "f0f0bfb2.dac5c"
        ],
        "x": 95,
        "y": 1200,
        "wires": [
            [
                "c156e518.05d988"
            ]
        ]
    },
    {
        "id": "f9b525b6.538f98",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "node-red-http-in->",
        "links": [],
        "x": 455,
        "y": 1200,
        "wires": []
    },
    {
        "id": "15472e41.e35132",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "reboot-app",
        "links": [
            "fa33bfb3.d51478"
        ],
        "x": 1115,
        "y": 280,
        "wires": []
    },
    {
        "id": "6e2cd9.08e82b28",
        "type": "comment",
        "z": "b11498a.48620e8",
        "name": "MQTT OUT",
        "info": "Wait for valid device/sensor instance to send via MQTT\n\nUse update-instance node before, to validate your instance.\n",
        "x": 770,
        "y": 520,
        "wires": []
    },
    {
        "id": "c6c5c1c9.6e48f",
        "type": "comment",
        "z": "b11498a.48620e8",
        "name": "HTTP IN",
        "info": "",
        "x": 140,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d34bc327.31a828",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "refresh-state",
        "links": [
            "4f605a75.43f52c",
            "d3024ff7.0d9f18",
            "957fcaee.81c6d8",
            "d8d1020b.c8e43",
            "7601cc5d.74596c",
            "24b6d1c7.644fe6"
        ],
        "x": 1115,
        "y": 160,
        "wires": []
    },
    {
        "id": "884796b8.b19d1",
        "type": "subflow:30f4a499.4b3d84",
        "z": "b11498a.48620e8",
        "name": "",
        "env": [
            {
                "name": "store_type",
                "value": "NODE_RED_STORE_TYPE",
                "type": "env"
            }
        ],
        "x": 970,
        "y": 260,
        "wires": [
            [
                "92dcaa94.f686c"
            ],
            [
                "15472e41.e35132"
            ]
        ]
    },
    {
        "id": "146d1589.6dfe22",
        "type": "link in",
        "z": "b11498a.48620e8",
        "name": "->node-red-settings-interface",
        "links": [
            "29dda125.84a71e"
        ],
        "x": 755,
        "y": 260,
        "wires": [
            [
                "884796b8.b19d1"
            ]
        ]
    },
    {
        "id": "29dda125.84a71e",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "boot-app",
        "links": [
            "4f605a75.43f52c",
            "146d1589.6dfe22",
            "5b949eb3.216f9",
            "24b6d1c7.644fe6",
            "d3024ff7.0d9f18",
            "957fcaee.81c6d8",
            "d8d1020b.c8e43",
            "7601cc5d.74596c"
        ],
        "x": 315,
        "y": 140,
        "wires": []
    },
    {
        "id": "e00c9ef4.c6c1e",
        "type": "subflow:9d9cc747.bb803",
        "z": "b11498a.48620e8",
        "name": "",
        "env": [
            {
                "name": "store_type",
                "value": "NODE_RED_STORE_TYPE",
                "type": "env"
            }
        ],
        "x": 960,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e89489cd.be935",
        "type": "link in",
        "z": "b11498a.48620e8",
        "name": "before-save-env-vars",
        "links": [
            "d9b64c61.9d87e",
            "92dcaa94.f686c"
        ],
        "x": 755,
        "y": 400,
        "wires": [
            [
                "e00c9ef4.c6c1e"
            ]
        ]
    },
    {
        "id": "80edd413.c1325",
        "type": "debug",
        "z": "b11498a.48620e8",
        "name": "INIT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 490,
        "y": 280,
        "wires": []
    },
    {
        "id": "b64665ee.caa9c8",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "after-state-init",
        "links": [
            "47e1064b.d2332",
            "bae2504a.c7f51",
            "3a185ea3.612f6a"
        ],
        "x": 495,
        "y": 240,
        "wires": []
    },
    {
        "id": "4f605a75.43f52c",
        "type": "link in",
        "z": "b11498a.48620e8",
        "name": "before-state-init",
        "links": [
            "d34bc327.31a828",
            "29dda125.84a71e",
            "c466b8fd.1ffd68",
            "104ff5e.f177c0a",
            "f561ddd7.4dfdf",
            "cfffca02.e6601"
        ],
        "x": 95,
        "y": 240,
        "wires": [
            [
                "9cc143d.12a8dc"
            ]
        ]
    },
    {
        "id": "92dcaa94.f686c",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "node-red-settings-interface->",
        "links": [
            "e89489cd.be935"
        ],
        "x": 1115,
        "y": 240,
        "wires": []
    },
    {
        "id": "9cc143d.12a8dc",
        "type": "subflow:5888280d.dff488",
        "z": "b11498a.48620e8",
        "name": "",
        "env": [
            {
                "name": "debug",
                "value": "false",
                "type": "bool"
            },
            {
                "name": "store_type",
                "value": "file",
                "type": "str"
            }
        ],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "b64665ee.caa9c8",
                "80edd413.c1325"
            ]
        ]
    },
    {
        "id": "4cf596d6.e5488",
        "type": "ui_template",
        "z": "b11498a.48620e8",
        "group": "71d0e110.38a99",
        "name": "clock-toolbar",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    } else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleString());\n    }\n    if(document.clockInterval){ \n        clearInterval(document.clockInterval);\n        document.clockInterval = null;\n    }\n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "global",
        "x": 550,
        "y": 139,
        "wires": [
            []
        ]
    },
    {
        "id": "24b6d1c7.644fe6",
        "type": "link in",
        "z": "b11498a.48620e8",
        "name": "->get-resources",
        "links": [
            "29dda125.84a71e",
            "d34bc327.31a828"
        ],
        "x": 95,
        "y": 400,
        "wires": [
            [
                "4e009773.b8f06"
            ]
        ]
    },
    {
        "id": "343d6582.e8e302",
        "type": "link in",
        "z": "b11498a.48620e8",
        "name": "->aloes-client-tx",
        "links": [
            "17625f77.c39e19",
            "42f328f2.4986c",
            "50786ea8.975ed8",
            "5c7cf5f.adce38c",
            "631f2527.8a4fa4",
            "63e91f51.2a63f8",
            "6c09c26b.bdfcc4",
            "72660de4.09c724",
            "7d1c2d5e.a37c34",
            "7df6bf99.a3917",
            "9c8badc1.142c58",
            "a02e7fa9.b1429",
            "a5a0fd30.86f5d",
            "aae5464a.93cca8",
            "ad363258.b2a1",
            "b4817e4a.8a9ac",
            "d08b5958.afca58",
            "e3524727.708a48",
            "e4c24259.eb0ec8",
            "ef60d46d.15c",
            "73d5a4cc.40e764",
            "37a4f5cb.6291aa",
            "7f6a74a7.8fc53c",
            "a62ea535.5d7a3",
            "7d26ff65.f548b",
            "45c55bb4.626f74",
            "d103ea64.d8dbc8",
            "b7380877.548d4",
            "fdb34fa4.acc928",
            "8fabd489.7c0f5",
            "df392138.8a9968",
            "32622a3d.bfbe86",
            "5a520130.6f664",
            "84062f9d.52f448",
            "d9c7db29.a4727",
            "f0839665.c2db88",
            "b25c8382.fb04e8",
            "6c26969f.f6d448",
            "3dcd0528.576eea",
            "e99b8d8.3eecff",
            "fdd45d9c.a23f6",
            "b17053a3.86c86",
            "b5fb3768.2beae8",
            "dddde6ed.a17458",
            "bd310267.4efb8",
            "5b51d0e3.439b2",
            "3177a4ab.3e2eec",
            "4c85ecb2.da6544",
            "d1f2c218.13853",
            "c1debd8d.6d078",
            "d6bfad17.f45028",
            "ceeab63c.59a3e8"
        ],
        "x": 715,
        "y": 800,
        "wires": [
            [
                "8e76946c.f92638"
            ]
        ]
    },
    {
        "id": "b459f868.096e98",
        "type": "comment",
        "z": "b11498a.48620e8",
        "name": "Interfaces Router",
        "info": "",
        "x": 160,
        "y": 940,
        "wires": []
    },
    {
        "id": "4330698b.f01fe8",
        "type": "ui_ui_control",
        "z": "b11498a.48620e8",
        "name": "init-ui",
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "6427eaaf.037f8c"
            ]
        ]
    },
    {
        "id": "e1e82c18.b3e03",
        "type": "inject",
        "z": "b11498a.48620e8",
        "name": "landing page",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tab\":\"status\",\"tabs\":{\"show\":[\"settings\"]}}",
        "payloadType": "json",
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "4330698b.f01fe8"
            ]
        ]
    },
    {
        "id": "6427eaaf.037f8c",
        "type": "subflow:2081b405.5d4b6c",
        "z": "b11498a.48620e8",
        "name": "",
        "env": [],
        "x": 500,
        "y": 1000,
        "wires": [
            [
                "cfffca02.e6601"
            ],
            [
                "7c822f5a.a78178"
            ],
            []
        ]
    },
    {
        "id": "7c822f5a.a78178",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "router-trigger->",
        "links": [
            "ec118092.5a618",
            "fde75076.9a278",
            "fab7684e.48e9d8",
            "2de32ac2.27aa66",
            "d032f752.265328",
            "18c313aa.647b5c",
            "2dd3d0a0.37ecf",
            "3564481d.8ef888",
            "bc773cee.ec98f",
            "3b963f5d.9fe128"
        ],
        "x": 635,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cfffca02.e6601",
        "type": "link out",
        "z": "b11498a.48620e8",
        "name": "reload-state",
        "links": [
            "4f605a75.43f52c",
            "957fcaee.81c6d8",
            "d8d1020b.c8e43"
        ],
        "x": 635,
        "y": 960,
        "wires": []
    },
    {
        "id": "5071aaf.47e0554",
        "type": "subflow:35be4516.a176d2",
        "z": "b11498a.48620e8",
        "name": "",
        "env": [],
        "x": 950,
        "y": 160,
        "wires": [
            [
                "d34bc327.31a828"
            ]
        ]
    },
    {
        "id": "3a185ea3.612f6a",
        "type": "link in",
        "z": "b11498a.48620e8",
        "name": "->aloes-status-interface",
        "links": [
            "b64665ee.caa9c8"
        ],
        "x": 755,
        "y": 160,
        "wires": [
            [
                "5071aaf.47e0554"
            ]
        ]
    },
    {
        "id": "8e76946c.f92638",
        "type": "aloes-tx",
        "z": "b11498a.48620e8",
        "name": "",
        "aloesNetwork": "242153d4.133ed4",
        "qos": 0,
        "retain": "",
        "x": 840,
        "y": 800,
        "wires": []
    },
    {
        "id": "618b3c0.294de44",
        "type": "aloes-rx",
        "z": "b11498a.48620e8",
        "name": "",
        "aloesNetwork": "242153d4.133ed4",
        "qos": "0",
        "datatype": "json",
        "collection": "",
        "x": 140,
        "y": 800,
        "wires": [
            [
                "4d4e0d86.fc7644"
            ]
        ]
    },
    {
        "id": "4e009773.b8f06",
        "type": "get-aloes-devices",
        "z": "b11498a.48620e8",
        "name": "get-devices",
        "aloesNetwork": "242153d4.133ed4",
        "preferredApi": "graph",
        "includeSensors": "true",
        "includeSensorsResources": "true",
        "x": 290,
        "y": 400,
        "wires": [
            [
                "73b96f2d.86fce8"
            ]
        ]
    },
    {
        "id": "71d0e110.38a99",
        "type": "ui_group",
        "name": "Group",
        "tab": "c8302d17.78ec3",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "242153d4.133ed4",
        "type": "aloes-network",
        "z": "",
        "name": "aloes-prod",
        "httpHost": "aloes.io",
        "httpPort": "443",
        "httpApiRoot": "/app/api",
        "httpSecure": true,
        "httpTls": "",
        "mqttHost": "aloes.io",
        "mqttPort": "8883",
        "mqttSecure": true,
        "mqttTls": "",
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true
    }
]