[
    {
        "id": "bd375408.2f8e08",
        "type": "subflow",
        "name": "get-oma-references",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "6578ca28.bcb0e4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1140,
                "y": 180,
                "wires": [
                    {
                        "id": "6da7a926.876a38",
                        "port": 0
                    },
                    {
                        "id": "e74065bc.3288e8",
                        "port": 0
                    },
                    {
                        "id": "54eb348f.9f4eac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "ALOES_HTTP_HOST",
                "type": "env",
                "value": "ALOES_HTTP_HOST"
            },
            {
                "name": "ALOES_HTTP_PORT",
                "type": "env",
                "value": "ALOES_HTTP_PORT"
            },
            {
                "name": "ALOES_HTTP_SECURE",
                "type": "env",
                "value": "ALOES_HTTP_SECURE"
            },
            {
                "name": "ALOES_TOKEN",
                "type": "env",
                "value": "ALOES_TOKEN"
            },
            {
                "name": "ALOES_USER_ID",
                "type": "env",
                "value": "ALOES_USER_ID"
            },
            {
                "name": "ALOES_HTTP_API_ROOT",
                "type": "env",
                "value": "ALOES_HTTP_API_ROOT"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ],
        "status": {
            "x": 1140,
            "y": 100,
            "wires": [
                {
                    "id": "61024bab.04f6f4",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d1482720.bb9e78",
        "type": "subflow:634979f8.a08618",
        "z": "bd375408.2f8e08",
        "name": "OmaObjects",
        "env": [
            {
                "name": "collection",
                "type": "str",
                "value": "OmaObjects"
            }
        ],
        "x": 590,
        "y": 180,
        "wires": [
            [
                "6da7a926.876a38"
            ],
            []
        ]
    },
    {
        "id": "6578ca28.bcb0e4",
        "type": "delay",
        "z": "bd375408.2f8e08",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 240,
        "y": 180,
        "wires": [
            [
                "d1482720.bb9e78",
                "68015dc6.65a6c4"
            ]
        ]
    },
    {
        "id": "61024bab.04f6f4",
        "type": "status",
        "z": "bd375408.2f8e08",
        "name": "",
        "scope": [
            "d1482720.bb9e78",
            "abb66ae5.7a56a8",
            "b8274b79.036a68"
        ],
        "x": 600,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b8274b79.036a68",
        "type": "subflow:634979f8.a08618",
        "z": "bd375408.2f8e08",
        "name": "OmaViews",
        "env": [
            {
                "name": "collection",
                "type": "str",
                "value": "OmaViews"
            }
        ],
        "x": 590,
        "y": 380,
        "wires": [
            [
                "54eb348f.9f4eac"
            ],
            []
        ]
    },
    {
        "id": "abb66ae5.7a56a8",
        "type": "subflow:634979f8.a08618",
        "z": "bd375408.2f8e08",
        "name": "OmaResources",
        "env": [
            {
                "name": "collection",
                "type": "str",
                "value": "OmaResources"
            }
        ],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "e74065bc.3288e8"
            ],
            []
        ]
    },
    {
        "id": "54eb348f.9f4eac",
        "type": "change",
        "z": "bd375408.2f8e08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "omaViews",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6da7a926.876a38",
        "type": "change",
        "z": "bd375408.2f8e08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "omaObjects",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e74065bc.3288e8",
        "type": "change",
        "z": "bd375408.2f8e08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "omaResources",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "68015dc6.65a6c4",
        "type": "delay",
        "z": "bd375408.2f8e08",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 230,
        "y": 280,
        "wires": [
            [
                "abb66ae5.7a56a8",
                "81d0941d.a20718"
            ]
        ]
    },
    {
        "id": "81d0941d.a20718",
        "type": "delay",
        "z": "bd375408.2f8e08",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 230,
        "y": 380,
        "wires": [
            [
                "b8274b79.036a68"
            ]
        ]
    },
    {
        "id": "31bb48b9.494fa8",
        "type": "subflow",
        "name": "aloes-status",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 100,
                "y": 160,
                "wires": [
                    {
                        "id": "7b482de.3c25ed4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 980,
                "y": 380,
                "wires": [
                    {
                        "id": "c354d250.1a2f6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "cc85544a.dd4d58",
        "type": "change",
        "z": "31bb48b9.494fa8",
        "name": "aloesClientStatus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::aloesClientStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "e7873d55.be2ff"
            ]
        ]
    },
    {
        "id": "e7873d55.be2ff",
        "type": "ui_template",
        "z": "31bb48b9.494fa8",
        "group": "f49a24d0.7ac858",
        "name": "aloes-status-icon",
        "order": 1,
        "width": "6",
        "height": "1",
        "format": "<!DOCTYPE html>\n<svg viewBox=\"0 0 270 40\" id=\"{{'aloes-status-'+ $id}}\">\n    <text x=\"0\" y=\"25\">{{'aloes status : ' + $statusText}}</text>\n    <circle id=\"{{'aloes-status-icon-'+$id}}\" x=\"0\" y=\"0\" cx=\"250\" cy=\"20\" r=\"15\" fill=\"{{$statusColor}}\" ></circle>\n</svg>\n<script>\n(function(scope) {\n  scope.$watch('msg', (msg) => {\n    try{\n        scope.$statusText = \"offline\";\n        scope.$statusColor = \"#ff4500\";\n        if (msg && (msg.payload === true || msg.payload === \"true\")) {\n            scope.$statusColor = \"#baff00\";\n            scope.$statusText = \"online\";\n        }\n        return msg;\n    } catch(error){\n        throw error;\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 790,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "37468039.52b2b",
        "type": "change",
        "z": "31bb48b9.494fa8",
        "name": "devicesStatus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::devicesStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 220,
        "wires": [
            [
                "d3fce206.a6712"
            ]
        ]
    },
    {
        "id": "d3fce206.a6712",
        "type": "ui_template",
        "z": "31bb48b9.494fa8",
        "group": "f49a24d0.7ac858",
        "name": "device-status-icon",
        "order": 3,
        "width": "6",
        "height": "1",
        "format": "<!DOCTYPE html>\n<svg viewBox=\"0 0 270 40\" id=\"{{'status-'+ $id}}\">\n    <text x=\"0\" y=\"25\">{{'device status : ' + $statusText}}</text>\n    <circle id=\"{{'status-icon-'+$id}}\" x=\"0\" y=\"0\" cx=\"250\" cy=\"20\" r=\"15\" fill=\"{{$statusColor}}\" ></circle>\n</svg>\n<script>\n(function(scope) {\n  scope.$watch('msg', (msg) => {\n    try{\n        scope.$statusText = \"Waiting\";\n        scope.$statusColor = \"#ff4500\";\n        if (msg && (msg.payload === true || msg.payload === \"true\")) {\n            scope.$statusColor = \"#baff00\";\n            scope.$statusText = \"Ready\";\n        }\n        return msg;\n    } catch(error){\n        throw error;\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 790,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c354d250.1a2f6",
        "type": "ui_button",
        "z": "31bb48b9.494fa8",
        "name": "refresh state",
        "group": "f49a24d0.7ac858",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 790,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "619c22.92e673e",
        "type": "ui_dropdown",
        "z": "31bb48b9.494fa8",
        "name": "devicesSelection",
        "label": "Devices selection",
        "tooltip": "",
        "place": "Select option",
        "group": "f49a24d0.7ac858",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 790,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6974c755.1a5c78",
        "type": "change",
        "z": "31bb48b9.494fa8",
        "name": "devicesSelection",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "#:(file)::devicesSelection",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "619c22.92e673e"
            ]
        ]
    },
    {
        "id": "7b482de.3c25ed4",
        "type": "delay",
        "z": "31bb48b9.494fa8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "cc85544a.dd4d58",
                "37468039.52b2b",
                "6974c755.1a5c78"
            ]
        ]
    },
    {
        "id": "f49a24d0.7ac858",
        "type": "ui_group",
        "z": "",
        "name": "status",
        "tab": "f6f0242.21726d8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f6f0242.21726d8",
        "type": "ui_tab",
        "z": "",
        "name": "status",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dabefe0c.eebd7",
        "type": "subflow",
        "name": "ui-router",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 400,
                "wires": [
                    {
                        "id": "4165997f.318d98"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 220,
                "wires": [
                    {
                        "id": "10b949a.86c1ab6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1160,
                "y": 320,
                "wires": [
                    {
                        "id": "4e2a5661.2f7318",
                        "port": 0
                    },
                    {
                        "id": "dfe7079f.f7b978",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1160,
                "y": 500,
                "wires": []
            }
        ],
        "env": [],
        "outputLabels": [
            "game",
            "devices",
            "settings"
        ]
    },
    {
        "id": "f9e81d2e.56f76",
        "type": "comment",
        "z": "dabefe0c.eebd7",
        "name": "INPUT",
        "info": "- receive tabs ( pages ) changes events.\n\n- validate group diplay based on each tab accessed and global state",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "4165997f.318d98",
        "type": "switch",
        "z": "dabefe0c.eebd7",
        "name": "tab name",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "devices",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 280,
        "y": 400,
        "wires": [
            [
                "10b949a.86c1ab6"
            ],
            [
                "6f2fbb8a.1f7314"
            ],
            [
                "bb872e53.be7e7"
            ]
        ]
    },
    {
        "id": "d35ffcd7.d0e9a",
        "type": "ui_ui_control",
        "z": "dabefe0c.eebd7",
        "name": "init-ui",
        "x": 990,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "bb872e53.be7e7",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "showAuth",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"settings_auth\"],\"hide\":[\"settings_aloes\",\"settings_node-red\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 500,
        "wires": [
            [
                "d35ffcd7.d0e9a"
            ]
        ]
    },
    {
        "id": "b872def3.c571a",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "showContent",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"settings_auth\"],\"show\":[\"settings_aloes\",\"settings_node-red\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "d35ffcd7.d0e9a"
            ]
        ]
    },
    {
        "id": "62ee95c.05b236c",
        "type": "function",
        "z": "dabefe0c.eebd7",
        "name": "",
        "func": "try {\n    let sequenceIsValid = false;\n    let tooManyAttempts = false;\n    let number1;\n    flow.get(\"number1\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number1 = res;\n    })\n    let number2;\n    flow.get(\"number2\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number2 = res;\n    })\n    let number3;\n    flow.get(\"number3\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number3 = res;\n    })\n    \n    if (number1 === 1 && number2 === 1 && number3 === 2) {\n        sequenceIsValid = true;\n    }\n    // increment countdown\n    if (sequenceIsValid === true) {\n        return msg;\n    } \n    return null;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 560,
        "wires": [
            [
                "b872def3.c571a"
            ]
        ]
    },
    {
        "id": "faca1689.3231f8",
        "type": "ui_button",
        "z": "dabefe0c.eebd7",
        "name": "",
        "group": "936ca0d1.a08ad",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "validate",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "62ee95c.05b236c"
            ]
        ]
    },
    {
        "id": "cc59aa61.adfe48",
        "type": "ui_numeric",
        "z": "dabefe0c.eebd7",
        "name": "number1",
        "label": "",
        "tooltip": "",
        "group": "936ca0d1.a08ad",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 120,
        "y": 620,
        "wires": [
            [
                "532dc777.705758"
            ]
        ]
    },
    {
        "id": "f309a38b.40fe9",
        "type": "ui_numeric",
        "z": "dabefe0c.eebd7",
        "name": "number2",
        "label": "",
        "tooltip": "",
        "group": "936ca0d1.a08ad",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 120,
        "y": 660,
        "wires": [
            [
                "26b608de.95bd78"
            ]
        ]
    },
    {
        "id": "1b45d249.10428e",
        "type": "ui_numeric",
        "z": "dabefe0c.eebd7",
        "name": "number3",
        "label": "",
        "tooltip": "",
        "group": "936ca0d1.a08ad",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 120,
        "y": 700,
        "wires": [
            [
                "18814e9.263aeb1"
            ]
        ]
    },
    {
        "id": "532dc777.705758",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "26b608de.95bd78",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "18814e9.263aeb1",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "c14b3fcd.29158",
        "type": "ui_text_input",
        "z": "dabefe0c.eebd7",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "936ca0d1.a08ad",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "d147e023.380ec"
            ]
        ]
    },
    {
        "id": "d147e023.380ec",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "adminPass",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "dfe7079f.f7b978",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "setDeviceTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "Device",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "collection",
                "pt": "msg",
                "to": "Trigger",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "fa03cde9.4c569",
        "type": "debug",
        "z": "dabefe0c.eebd7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "6f2fbb8a.1f7314",
        "type": "function",
        "z": "dabefe0c.eebd7",
        "name": "showDevicesSelection",
        "func": "try {\n    const storeType = env.get(\"store_type\") || \"file\";\n    const storeType2 = env.get(\"store_type2\") || \"memoryOnly\";\n    let devicesSelection;\n    global.get(\"devicesSelection\", storeType, (err,res) => {\n        if (err) throw err;\n        devicesSelection = res;\n    });\n    let devicesList;\n    global.get(\"devicesList\", storeType2, (err,res) => {\n        if (err) throw err;\n        devicesList = res;\n    });\n    msg.payload = {group: {hide: [], show : []}};\n    msg.devicesList = devicesList;\n    msg.showList = [];\n    msg.hideList = [];\n    delete msg.socketid;\n    delete msg.socketip;\n    delete msg.tab;\n    devicesList.forEach(deviceName => {\n        if (devicesSelection.find(dev => dev === deviceName)) {\n            msg.showList.push(`${deviceName}`);\n            msg.payload.group.show.push(`devices_${deviceName}`);\n        } else {\n            msg.hideList.push(`${deviceName}`);\n            msg.payload.group.hide.push(`devices_${deviceName}`);\n        }\n    });\n    return msg;\n} catch(error){\n    return null;\n} \n\n        ",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "d35ffcd7.d0e9a",
                "113b1c60.ee5964"
            ]
        ]
    },
    {
        "id": "113b1c60.ee5964",
        "type": "function",
        "z": "dabefe0c.eebd7",
        "name": "showListUpdate",
        "func": "try {\n    if (!msg.showList) return null;\n    msg.devicesList.forEach(deviceName => node.send({deviceName, topic: `refresh/${deviceName}`}));\n    //  msg.showList.forEach(deviceName => node.send({deviceName, topic: `refresh/device/${deviceName}`}));\n} catch(error){\n    return null;\n} \n\n        ",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 340,
        "wires": [
            [
                "dfe7079f.f7b978",
                "4e2a5661.2f7318"
            ]
        ]
    },
    {
        "id": "4e2a5661.2f7318",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "setSensorTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "Sensor",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "collection",
                "pt": "msg",
                "to": "Trigger",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "10b949a.86c1ab6",
        "type": "change",
        "z": "dabefe0c.eebd7",
        "name": "setStatusTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "936ca0d1.a08ad",
        "type": "ui_group",
        "z": "",
        "name": "auth",
        "tab": "e96a2f97.c158c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "634979f8.a08618",
        "type": "subflow",
        "name": "set-aloes-request",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 140,
                "y": 180,
                "wires": [
                    {
                        "id": "3218c745.3b9bc8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 180,
                "wires": [
                    {
                        "id": "71aa7052.ff007",
                        "port": 1
                    },
                    {
                        "id": "1cdd0c10.dea2b4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1200,
                "y": 260,
                "wires": [
                    {
                        "id": "b43239b2.d6b468",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "aloes_token",
                "type": "env",
                "value": "ALOES_TOKEN"
            },
            {
                "name": "aloes_http_secure",
                "type": "env",
                "value": "ALOES_HTTP_SECURE"
            },
            {
                "name": "aloes_http_host",
                "type": "env",
                "value": "ALOES_HTTP_HOST"
            },
            {
                "name": "aloes_http_port",
                "type": "env",
                "value": "ALOES_HTTP_PORT"
            },
            {
                "name": "aloes_http_api_root",
                "type": "env",
                "value": "ALOES_HTTP_API_ROOT"
            },
            {
                "name": "content_type",
                "type": "str",
                "value": "application/json"
            },
            {
                "name": "collection",
                "type": "str",
                "value": "Devices"
            },
            {
                "name": "method",
                "type": "str",
                "value": "GET"
            },
            {
                "name": "path",
                "type": "str",
                "value": ""
            }
        ],
        "icon": "node-red/white-globe.png",
        "status": {
            "x": 1200,
            "y": 60,
            "wires": [
                {
                    "id": "6375d397.d1ef0c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "3218c745.3b9bc8",
        "type": "function",
        "z": "634979f8.a08618",
        "name": "set-aloes-request",
        "func": "const token = env.get('aloes_token');\nconst path = env.get('path');\nmsg.contentType = env.get(\"content_type\") || \"application/json\";\nmsg.method = env.get(\"method\") || 'GET';\nmsg.headers = {};\nmsg.headers['Authorization'] = token;\nmsg.headers['Accept'] = `${msg.contentType}, text/plain`;\nmsg.headers['Content-Type'] = msg.contentType;\nmsg.headers['x-access-token'] = token;\n//  msg.headers['Origin'] = 'http://localhost:8000';\n//  msg.headers['Connection'] = 'keep-alive';\nlet protocol = 'http';\nif (env.get('aloes_http_secure') === 'true') {\n    protocol = 'https';\n}\nconst collection = msg.collection || env.get('collection') || 'Devices';\nconst aloesApiRoot = env.get('aloes_http_api_root') || '/api';\nmsg.baseUrl = `${protocol}://${env.get('aloes_http_host')}:${env.get('aloes_http_port')}${aloesApiRoot}`;\nmsg.url = `${msg.baseUrl}/${collection}`;\nif (path) {\n    msg.url = `${msg.url}/${path}`;\n}\nif (msg.filter) {\n    //  msg.url = `${msg.url}?filter=${JSON.stringify(msg.filter).toString()}`;\n    msg.url = `${msg.url}?filter=${msg.filter}`;\n}\nreturn msg; \n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "6a8ace38.90b31"
            ]
        ]
    },
    {
        "id": "6a8ace38.90b31",
        "type": "http request",
        "z": "634979f8.a08618",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "b43239b2.d6b468"
            ]
        ]
    },
    {
        "id": "71aa7052.ff007",
        "type": "switch",
        "z": "634979f8.a08618",
        "name": "",
        "property": "contentType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 160,
        "wires": [
            [
                "1cdd0c10.dea2b4"
            ],
            []
        ]
    },
    {
        "id": "1cdd0c10.dea2b4",
        "type": "json",
        "z": "634979f8.a08618",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b43239b2.d6b468",
        "type": "function",
        "z": "634979f8.a08618",
        "name": "parse-HTTP-response",
        "func": "try {\n    if (msg.statusCode && msg.statusCode === 200) {\n        node.status({fill:\"green\",shape:\"ring\",text:\"success\"});\n        return [msg,null];\n    }\n    node.status({fill:\"red\",shape:\"ring\",text:\"error\"});\n    return [null,msg];\n} catch(error) {\n    return null;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 740,
        "y": 180,
        "wires": [
            [
                "71aa7052.ff007"
            ],
            []
        ]
    },
    {
        "id": "6375d397.d1ef0c",
        "type": "status",
        "z": "634979f8.a08618",
        "name": "",
        "scope": [
            "6a8ace38.90b31",
            "b43239b2.d6b468"
        ],
        "x": 720,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fbfe0691.2c23a8",
        "type": "subflow",
        "name": "get-measurements",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 100,
                "y": 160,
                "wires": [
                    {
                        "id": "7a490c66.5b5cf4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 160,
                "wires": [
                    {
                        "id": "93c5373e.928708",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "ALOES_HTTP_HOST",
                "type": "env",
                "value": "ALOES_HTTP_HOST"
            },
            {
                "name": "ALOES_HTTP_PORT",
                "type": "env",
                "value": "ALOES_HTTP_PORT"
            },
            {
                "name": "ALOES_HTTP_SECURE",
                "type": "env",
                "value": "ALOES_HTTP_SECURE"
            },
            {
                "name": "ALOES_TOKEN",
                "type": "env",
                "value": "ALOES_TOKEN"
            },
            {
                "name": "ALOES_USER_ID",
                "type": "env",
                "value": "ALOES_USER_ID"
            },
            {
                "name": "ALOES_HTTP_API_ROOT",
                "type": "env",
                "value": "ALOES_HTTP_API_ROOT"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ],
        "status": {
            "x": 1020,
            "y": 80,
            "wires": [
                {
                    "id": "a394d1d3.5ab6",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "ac1aa61c.0f8b68",
        "type": "debug",
        "z": "fbfe0691.2c23a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "93c5373e.928708",
        "type": "function",
        "z": "fbfe0691.2c23a8",
        "name": "parse-payload",
        "func": "const debug = env.get(\"debug\");\ntry {\n    if (msg.payload && msg.payload !== null) {\n        msg.payload.forEach((measurement,index) => {\n            let message;\n            const method = \"HEAD\";\n            const userId = env.get(\"ALOES_USER_ID\");\n            message = {measurement, topic: `${userId}/Measurement/${method}`};\n            if (index === msg.payload.length - 1 ) {\n                message.complete = true;\n            }\n            if (debug) {\n                console.log('MEASUREMENT : ', message.measurement);\n            }\n            node.send(message);\n        });\n        return null;\n    }\n    throw new Error(\"Wrong payload format\")\n} catch(error){\n    return error;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "78012690.454f98",
        "type": "function",
        "z": "fbfe0691.2c23a8",
        "name": "set-query",
        "func": "try {\n    const ownerId = env.get('ALOES_USER_ID');\n    const filter = {\n        where : { \n            and : [\n                { ownerId },\n                {rp : { inq : ['0s', '2h'] } },\n            ] \n        },\n        limit: 10000\n    };\nconst fieldsValues = msg.values;\nconst fielsOperators = msg.operators; // ['=', '!=', '>', '>=', '<', '<=']\nconst fieldsConditions = msg.conditions; // ['and', 'or']\n//if (fieldsValues && fielsOperators && fieldsConditions) {\n// does not work with field time\n// arrays must all have the same length and contain valid values\n// query = `${query} and (`;\n// values.forEach((value, index) => {  \n//    query = `${query} ${resourceId} ${operators[index]} ${value} ${conditions[index]}`\n//  }):\n// query = `${query} )`;\n//}\n\n    //  console.log(\"filter\", filter.where.and[2].or[1]);\n    msg.filter = JSON.stringify(filter).toString();\n    return msg; \n} catch(error) {\n    return error;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "30a2ddb7.9cd112"
            ]
        ]
    },
    {
        "id": "30a2ddb7.9cd112",
        "type": "subflow:634979f8.a08618",
        "z": "fbfe0691.2c23a8",
        "name": "",
        "env": [
            {
                "name": "collection",
                "type": "str",
                "value": "Measurements"
            }
        ],
        "x": 610,
        "y": 160,
        "wires": [
            [
                "93c5373e.928708"
            ],
            [
                "ac1aa61c.0f8b68"
            ]
        ]
    },
    {
        "id": "7a490c66.5b5cf4",
        "type": "delay",
        "z": "fbfe0691.2c23a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 240,
        "y": 160,
        "wires": [
            [
                "78012690.454f98"
            ]
        ]
    },
    {
        "id": "a394d1d3.5ab6",
        "type": "status",
        "z": "fbfe0691.2c23a8",
        "name": "",
        "scope": [
            "30a2ddb7.9cd112"
        ],
        "x": 580,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ee9e0cea.d1206",
        "type": "subflow",
        "name": "set-device-status",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 80,
                "y": 200,
                "wires": [
                    {
                        "id": "df81382e.ce1898"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 200,
                "wires": [
                    {
                        "id": "62331bae.f35a34",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "store_type",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "6b434165.d29ce",
        "type": "function",
        "z": "ee9e0cea.d1206",
        "name": "setDevicesStatus",
        "func": "try {\n    const debug = env.get(\"debug\");\n    const storeType = env.get(\"store_type\") || \"file\";\n    const storeType2 = \"memoryOnly\";\n    // based on selected devices for the scenario\n    // read devices status in memory\n    let devicesSelection = [];\n    global.get(\"devicesSelection\", storeType, (err,res) => {\n        if (err) throw err;\n        devicesSelection = res;\n    });\n    let devicesStatus = true;\n    if (debug) {\n        console.log(\"setDevicesStatus:req\", devicesSelection);\n    }\n    if (!devicesSelection) {\n        global.set(\"devicesSelection\", [], storeType, err => {\n            if (err) throw err;\n        });\n        devicesStatus = true;\n    } else if (devicesSelection.length < 1) {\n        devicesStatus = true;\n    } else {\n        const validators = devicesSelection.map(deviceName => {\n            let device;\n            global.get(`device-${deviceName}`, storeType2, (err, res) => {\n                if (err) throw err;\n                device = res;\n            });\n            if (device && device.status) {\n                return true;\n            }\n            return false;\n        });\n        if (validators.some(v => v === false)) {\n            devicesStatus = false;\n        } else {\n            devicesStatus = true;\n        }\n    }\n    if (debug) {\n        console.log(\"setDevicesStatus:res\", devicesStatus);\n    }\n    global.set(\"devicesStatus\", devicesStatus, storeType, err => {\n        if (err) throw err;\n    });\n    msg.devicesStatus = devicesStatus;\n    return msg;\n} catch(error){\n    return error;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 200,
        "wires": [
            [
                "62331bae.f35a34"
            ]
        ]
    },
    {
        "id": "df81382e.ce1898",
        "type": "delay",
        "z": "ee9e0cea.d1206",
        "name": "debounce",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 200,
        "y": 200,
        "wires": [
            [
                "6a98bfbd.4aa08"
            ]
        ]
    },
    {
        "id": "6a98bfbd.4aa08",
        "type": "delay",
        "z": "ee9e0cea.d1206",
        "name": "",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "6b434165.d29ce"
            ]
        ]
    },
    {
        "id": "62331bae.f35a34",
        "type": "change",
        "z": "ee9e0cea.d1206",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "refresh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f64c7b58.f8e8a8",
        "type": "subflow",
        "name": "save-settings",
        "info": "",
        "category": "server",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "ace3a751.5d31f8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 140,
                "wires": [
                    {
                        "id": "5f1aa4a6.55d3cc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "store_type",
                "type": "env",
                "value": ""
            }
        ],
        "icon": "node-red/file-out.png"
    },
    {
        "id": "6ff3cecf.40e95",
        "type": "function",
        "z": "f64c7b58.f8e8a8",
        "name": "update-env-file",
        "func": "try {\n    const storeType = env.get(\"store_type\") || \"memory\";\n    const processEnv = global.get(\"processEnv\", storeType);\n    if (!processEnv) throw new Error(\"process.env not available\");\n    if (!processEnv.NODE_ENV) {\n        msg.filename = \"./.env\";\n    } else {\n        msg.filename = `./deploy/.env_${processEnv.NODE_ENV}`;\n    }\n    msg.payload = `NODE_ENV=${env.get(\"NODE_ENV\")}\nNODE_NAME=${env.get(\"NODE_NAME\")}\nNODE_RED_URL=${env.get(\"NODE_RED_URL\")}\nNODE_RED_HOST=${env.get(\"NODE_RED_HOST\")}\nNODE_RED_PORT=${env.get(\"NODE_RED_PORT\")}\nNODE_RED_ADMIN_ROOT=${env.get(\"NODE_RED_ADMIN_ROOT\")}\nNODE_RED_API_ROOT=${env.get(\"NODE_RED_API_ROOT\")}\nNODE_RED_UI_PATH=${env.get(\"NODE_RED_UI_PATH\")}\nNODE_RED_USER_DIR=${env.get(\"NODE_RED_USER_DIR\")}\nNODE_RED_USERNAME=${env.get(\"NODE_RED_USERNAME\")}\nNODE_RED_USERPASS=${env.get(\"NODE_RED_USERPASS\")}\nNODE_RED_PASSHASH=${env.get(\"NODE_RED_PASSHASH\")}\nNODE_RED_ADMIN_PASSHASH=${env.get(\"NODE_RED_ADMIN_PASSHASH\")}\nNODE_RED_SESSION_SECRET=${env.get(\"NODE_RED_SESSION_SECRET\")}\nNODE_RED_CREDENTIAL_SECRET=${env.get(\"NODE_RED_CREDENTIAL_SECRET\")}\nNODE_RED_STORE_TYPE=${env.get(\"NODE_RED_STORE_TYPE\")}\nALOES_HTTP_HOST=${env.get(\"ALOES_HTTP_HOST\")}\nALOES_HTTP_PORT=${env.get(\"ALOES_HTTP_PORT\")}\nALOES_HTTP_API_ROOT=${env.get(\"ALOES_HTTP_API_ROOT\")}\nALOES_HTTP_SECURE=${env.get(\"ALOES_HTTP_SECURE\")}\nALOES_MQTT_HOST=${env.get(\"ALOES_MQTT_HOST\")}\nALOES_MQTT_PORT=${env.get(\"ALOES_MQTT_PORT\")}\nALOES_MQTT_SECURE=${env.get(\"ALOES_MQTT_SECURE\")}\nALOES_USER_ID=${env.get(\"ALOES_USER_ID\")}\nALOES_USER_EMAIL=${env.get(\"ALOES_USER_EMAIL\")}\nALOES_USER_PASSWORD=${env.get(\"ALOES_USER_PASSWORD\")}\nALOES_TOKEN=${env.get(\"ALOES_TOKEN\")}\nALOES_TOPIC_IN=${env.get(\"ALOES_TOPIC_IN\")}\nSERVER_LOGGER_LEVEL=${env.get(\"SERVER_LOGGER_LEVEL\")}\nTUNNEL_URL=${env.get(\"TUNNEL_URL\")}\nGIT_REPO_SSH_URL=${env.get(\"GIT_REPO_SSH_URL\")}\nVPS_HOST=${env.get(\"VPS_HOST\")}\nVPS_USER=${env.get(\"VPS_USER\")}`\n    return msg;\n} catch(error) {\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "5f1aa4a6.55d3cc"
            ]
        ]
    },
    {
        "id": "5f1aa4a6.55d3cc",
        "type": "file",
        "z": "f64c7b58.f8e8a8",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "a27e92b7.56709"
            ]
        ]
    },
    {
        "id": "a6183d2e.3c86",
        "type": "ui_toast",
        "z": "f64c7b58.f8e8a8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 707,
        "y": 257,
        "wires": []
    },
    {
        "id": "a27e92b7.56709",
        "type": "function",
        "z": "f64c7b58.f8e8a8",
        "name": "buildNotif",
        "func": "msg.payload = \"Environment variables file updated, please restart app to validate them.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "a6183d2e.3c86"
            ]
        ]
    },
    {
        "id": "ace3a751.5d31f8",
        "type": "delay",
        "z": "f64c7b58.f8e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 220,
        "y": 140,
        "wires": [
            [
                "6ff3cecf.40e95"
            ]
        ]
    },
    {
        "id": "9efc52fb.fd653",
        "type": "subflow",
        "name": "node-red-settings",
        "info": "",
        "category": "server",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "d30fdbbb.52c298"
                    },
                    {
                        "id": "f5dc7730.efe0a8"
                    },
                    {
                        "id": "43f06b7e.eb6d14"
                    },
                    {
                        "id": "b0251496.8a0668"
                    },
                    {
                        "id": "e1e1e57a.1d4068"
                    },
                    {
                        "id": "2deff4be.8085dc"
                    },
                    {
                        "id": "5ec5e489.2e9adc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 540,
                "wires": [
                    {
                        "id": "4198403d.5c5c7",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1060,
                "y": 600,
                "wires": [
                    {
                        "id": "e12110c3.3fb8b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NODE_RED_URL",
                "type": "env",
                "value": "NODE_RED_URL"
            },
            {
                "name": "NODE_RED_HOST",
                "type": "env",
                "value": "NODE_RED_HOST"
            },
            {
                "name": "NODE_RED_PORT",
                "type": "env",
                "value": "NODE_RED_PORT"
            },
            {
                "name": "NODE_RED_ADMIN_ROOT",
                "type": "env",
                "value": "NODE_RED_ADMIN_ROOT"
            },
            {
                "name": "NODE_RED_API_ROOT",
                "type": "env",
                "value": "NODE_RED_API_ROOT"
            },
            {
                "name": "TUNNEL_URL",
                "type": "env",
                "value": "TUNNEL_URL"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": ""
            }
        ],
        "icon": "font-awesome/fa-cog"
    },
    {
        "id": "d30fdbbb.52c298",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedHost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_HOST",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "413c2a60.8f7214"
            ]
        ]
    },
    {
        "id": "bddb9184.b1c9c",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedHost",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedHost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "413c2a60.8f7214",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "HTTP Host",
        "tooltip": "",
        "group": "ef2e1ee6.6cb68",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "bddb9184.b1c9c"
            ]
        ]
    },
    {
        "id": "43f06b7e.eb6d14",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedPort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_PORT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "e69e3e5c.d682a"
            ]
        ]
    },
    {
        "id": "8b30a114.6e91e",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedPort",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedPort",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e69e3e5c.d682a",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "HTTP Port",
        "tooltip": "",
        "group": "ef2e1ee6.6cb68",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "8b30a114.6e91e"
            ]
        ]
    },
    {
        "id": "f5dc7730.efe0a8",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedUrl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_URL",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 100,
        "wires": [
            [
                "93ddc01e.34acf"
            ]
        ]
    },
    {
        "id": "68e5bcf7.e71244",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedUrl",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedUrl",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "93ddc01e.34acf",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "HTTP URL",
        "tooltip": "",
        "group": "ef2e1ee6.6cb68",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 100,
        "wires": [
            [
                "68e5bcf7.e71244"
            ]
        ]
    },
    {
        "id": "b0251496.8a0668",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedAdminRoot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_ADMIN_ROOT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 220,
        "wires": [
            [
                "992885a2.9c00b8"
            ]
        ]
    },
    {
        "id": "f81721b7.e7b2b",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedAdminRoot",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedAdminRoot",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "992885a2.9c00b8",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "HTTP Admin Root",
        "tooltip": "URL/<admin root>",
        "group": "ef2e1ee6.6cb68",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "f81721b7.e7b2b"
            ]
        ]
    },
    {
        "id": "c436df4a.4e60e",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "HTTP API Root",
        "tooltip": "URL/<api root>",
        "group": "ef2e1ee6.6cb68",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "66b43687.5f8888"
            ]
        ]
    },
    {
        "id": "e1e1e57a.1d4068",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedApiRoot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_API_ROOT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "c436df4a.4e60e"
            ]
        ]
    },
    {
        "id": "66b43687.5f8888",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedApiRoot",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedApiRoot",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e6050ac2.bb3008",
        "type": "debug",
        "z": "9efc52fb.fd653",
        "name": "NodeRedSettingsUpdate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 890,
        "y": 500,
        "wires": []
    },
    {
        "id": "e12110c3.3fb8b",
        "type": "ui_button",
        "z": "9efc52fb.fd653",
        "name": "",
        "group": "ef2e1ee6.6cb68",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Restart app",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"requestUrl\":\"restart\",\"method\":\"GET\"}",
        "payloadType": "json",
        "topic": "",
        "x": 450,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "9219e72a.e9e318",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "Tunnel URL",
        "tooltip": "leave empty for no tunnel; starts with https://..",
        "group": "ef2e1ee6.6cb68",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 450,
        "y": 300,
        "wires": [
            [
                "352f80.8691008"
            ]
        ]
    },
    {
        "id": "2deff4be.8085dc",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "tunnelUrl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "TUNNEL_URL",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 300,
        "wires": [
            [
                "9219e72a.e9e318"
            ]
        ]
    },
    {
        "id": "352f80.8691008",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "tunnelUrl",
        "rules": [
            {
                "t": "set",
                "p": "tunnelUrl",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5fe3bae5.130bd4",
        "type": "ui_button",
        "z": "9efc52fb.fd653",
        "name": "",
        "group": "ef2e1ee6.6cb68",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "810b0d3f.60e68"
            ]
        ]
    },
    {
        "id": "4198403d.5c5c7",
        "type": "function",
        "z": "9efc52fb.fd653",
        "name": "set-node-red-env",
        "func": "try {\n    const storeType = env.get(\"store_type\") || \"memoryOnly\";\n    const processEnv = global.get(\"processEnv\", storeType);\n    if (!processEnv) throw new Error(\"process.env unavailable\");\n    const nodeRedUrl = flow.get(\"nodeRedUrl\")\n    if (nodeRedUrl) {\n        processEnv.NODE_RED_URL = nodeRedUrl;\n    }  \n    const nodeRedPort = flow.get(\"nodeRedPort\")\n    if (nodeRedPort) {\n        processEnv.NODE_RED_PORT = nodeRedPort;\n    }\n    const nodeRedHost = flow.get(\"nodeRedHost\")\n    if (nodeRedHost) {\n        processEnv.NODE_RED_HOST = nodeRedHost;\n    }  \n    const nodeRedAdminRoot = flow.get(\"nodeRedAdminRoot\")\n    if (nodeRedAdminRoot) {\n        processEnv.NODE_RED_ADMIN_ROOT = nodeRedAdminRoot;\n    } \n    const nodeRedApiRoot = flow.get(\"nodeRedApiRoot\")\n    if (nodeRedApiRoot) {\n        processEnv.NODE_RED_API_ROOT = nodeRedApiRoot;\n    }\n    const nodeRedUsername = flow.get(\"nodeRedUsername\")\n    if (nodeRedUsername) {\n        processEnv.NODE_RED_USERNAME = nodeRedUsername;\n    }\n    const nodeRedPassword = flow.get(\"nodeRedPassword\")\n    if (nodeRedPassword) {\n        processEnv.NODE_RED_USERPASS = nodeRedPassword;\n    }\n    const tunnelUrl = flow.get(\"tunnelUrl\")\n    if (tunnelUrl) {\n        processEnv.TUNNEL_URL = tunnelUrl;\n    }\n    if (env.get(\"debug\")) {\n        return [msg,msg];\n    }\n    return [msg,null];\n}catch(error){\n    return null;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 750,
        "y": 540,
        "wires": [
            [],
            [
                "e6050ac2.bb3008"
            ]
        ]
    },
    {
        "id": "810b0d3f.60e68",
        "type": "delay",
        "z": "9efc52fb.fd653",
        "name": "1msg/3s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 580,
        "y": 540,
        "wires": [
            [
                "4198403d.5c5c7"
            ]
        ]
    },
    {
        "id": "9b8854b6.9b6b58",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "User",
        "tooltip": "user to connect on /app/ui",
        "group": "ef2e1ee6.6cb68",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "5d7abfd2.1290f"
            ]
        ]
    },
    {
        "id": "5ec5e489.2e9adc",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedUsername",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_USERNAME",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 340,
        "wires": [
            [
                "9b8854b6.9b6b58"
            ]
        ]
    },
    {
        "id": "eb07045c.aaa698",
        "type": "ui_text_input",
        "z": "9efc52fb.fd653",
        "name": "",
        "label": "Pass",
        "tooltip": "password to connect on /app/ui",
        "group": "ef2e1ee6.6cb68",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "16e50d42.1af6b3"
            ]
        ]
    },
    {
        "id": "5d7abfd2.1290f",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedUsername",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedUsername",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "16e50d42.1af6b3",
        "type": "change",
        "z": "9efc52fb.fd653",
        "name": "nodeRedPassword",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedPassword",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ef2e1ee6.6cb68",
        "type": "ui_group",
        "z": "9efc52fb.fd653",
        "name": "node-red",
        "tab": "e96a2f97.c158c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e96a2f97.c158c",
        "type": "ui_tab",
        "z": "",
        "name": "settings",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "231a8ec9.ae4b12",
        "type": "subflow",
        "name": "http-api",
        "info": "",
        "category": "server",
        "in": [
            {
                "x": 120,
                "y": 320,
                "wires": [
                    {
                        "id": "7ba783cf.ccc94c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 320,
                "wires": [
                    {
                        "id": "786cd88f.f250f8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "node_red_admin_passhash",
                "type": "env",
                "value": "NODE_RED_ADMIN_PASSHASH"
            },
            {
                "name": "node_red_host",
                "type": "env",
                "value": "NODE_RED_HOST"
            },
            {
                "name": "node_red_port",
                "type": "env",
                "value": "NODE_RED_PORT"
            },
            {
                "name": "node_red_url",
                "type": "env",
                "value": "NODE_RED_URL"
            },
            {
                "name": "node_red_api_root",
                "type": "env",
                "value": "NODE_RED_API_ROOT"
            },
            {
                "name": "game_session_name",
                "type": "env",
                "value": "GAME_SESSION_NAME"
            }
        ],
        "icon": "font-awesome/fa-cloud"
    },
    {
        "id": "a2a25eba.466c7",
        "type": "http response",
        "z": "231a8ec9.ae4b12",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "d215de95.ae78",
        "type": "function",
        "z": "231a8ec9.ae4b12",
        "name": "Set Content-Type header",
        "func": "msg.headers = {\n    \"Content-Type\":\"image/jpeg\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "a2a25eba.466c7"
            ]
        ]
    },
    {
        "id": "13d992c7.c87b6d",
        "type": "file in",
        "z": "231a8ec9.ae4b12",
        "name": "",
        "filename": "/tmp/example.jpg",
        "format": "",
        "sendError": true,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "d215de95.ae78"
            ]
        ]
    },
    {
        "id": "dbb6b485.2fb6c8",
        "type": "http in",
        "z": "231a8ec9.ae4b12",
        "name": "",
        "url": "/testImage",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "13d992c7.c87b6d"
            ]
        ]
    },
    {
        "id": "e46f2d35.3cbab",
        "type": "comment",
        "z": "231a8ec9.ae4b12",
        "name": "HTTP API",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "786cd88f.f250f8",
        "type": "http request",
        "z": "231a8ec9.ae4b12",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 570,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba783cf.ccc94c",
        "type": "function",
        "z": "231a8ec9.ae4b12",
        "name": "set-internal-request",
        "func": "try {\n    const host = env.get(\"node_red_host\");\n    const port = env.get(\"node_red_port\");\n    const apiRoot = env.get(\"node_red_api_root\");\n    const url = env.get(\"node_red_url\");\n    const token = env.get(\"node_red_admin_passhash\");\n    //  console.log(\"token\", token)\n    //  msg.url = `http://${host}:${port}/${apiRoot}/start`;\n    if (!token) throw new Error(\"No token retrieved\");\n    let reqUrl;\n    //  console.log(\"payload\", msg.payload)\n    if (msg.payload.requestUrl) {\n        reqUrl = msg.payload.requestUrl;\n    } else {\n        reqUrl = \"start\";\n    }\n    let method;\n    if (msg.payload.method) {\n        method = msg.payload.method;\n    } else {\n        method = \"GET\";\n    }\n    msg.url = `${url}/${reqUrl}`;\n    msg.method = method;\n    msg.headers = {};\n    msg.headers['Authorization'] = token;\n    msg.headers['Accept'] = \"application/json\";\n    msg.headers['Content-Type'] = \"application/json\";\n    msg.headers['x-access-token'] = token;\n    console.log(\"url\", msg.url)\n    console.log(\"headers\", msg.headers)\n\n    if (msg.payload.query) {\n        //  msg.body = msg.payload.query;\n        const query = JSON.stringify(msg.payload.query);\n        msg.payload = query;\n        console.log(\"payload\", msg.payload)\n    } else {\n        msg.payload = {token, userId: 'test'};\n    }\n    //  msg.query = {filter};\n    return msg;\n} catch(error) {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 320,
        "wires": [
            [
                "786cd88f.f250f8"
            ]
        ]
    },
    {
        "id": "db6d41ec.358a7",
        "type": "tab",
        "label": "Core",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4e6c629c.0003dc",
        "type": "comment",
        "z": "db6d41ec.358a7",
        "name": "Global rules",
        "info": "",
        "x": 810,
        "y": 80,
        "wires": []
    },
    {
        "id": "a420df24.32282",
        "type": "comment",
        "z": "db6d41ec.358a7",
        "name": "MQTT IN",
        "info": "- Declare device by using aloes-device node\n\n- Fill settings with device-id and device-name from Aloes\n- Link the output to a custom interfaces/scenario flow",
        "x": 140,
        "y": 1080,
        "wires": []
    },
    {
        "id": "edce620f.17871",
        "type": "inject",
        "z": "db6d41ec.358a7",
        "name": "Boot App",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "f6df1cad.76caa"
            ]
        ]
    },
    {
        "id": "9845a3a3.be2ee",
        "type": "comment",
        "z": "db6d41ec.358a7",
        "name": "Initialization",
        "info": "",
        "x": 150,
        "y": 80,
        "wires": []
    },
    {
        "id": "62390c30.03b5b4",
        "type": "subflow:231a8ec9.ae4b12",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [],
        "x": 260,
        "y": 940,
        "wires": [
            [
                "f1b2081d.940138"
            ]
        ]
    },
    {
        "id": "7246684d.40ee78",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "aloes-client-rx->",
        "links": [
            "10aa970f.91a6a9",
            "258a7e01.840692",
            "3349a57a.fdd2ca",
            "38006924.8252c6",
            "4ec4209b.eb979",
            "7e44def5.a8a58",
            "a66e0af6.7ebf78",
            "b51d6807.52f3e8",
            "fef26247.8b1b3"
        ],
        "x": 315,
        "y": 1360,
        "wires": []
    },
    {
        "id": "455d3285.a0440c",
        "type": "status",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-in status",
        "scope": [
            "a6c154b9.d44ac8"
        ],
        "x": 180,
        "y": 1220,
        "wires": [
            [
                "4a36b8fb.11bc98",
                "ec768fa1.b60d1"
            ]
        ]
    },
    {
        "id": "4a36b8fb.11bc98",
        "type": "debug",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-in status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 380,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d6ae05b3.b462c8",
        "type": "status",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-out status",
        "scope": [
            "217651cb.fb5fbe"
        ],
        "x": 920,
        "y": 1200,
        "wires": [
            [
                "bdbc0e42.8c3ed"
            ]
        ]
    },
    {
        "id": "bdbc0e42.8c3ed",
        "type": "debug",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-out status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1120,
        "y": 1200,
        "wires": []
    },
    {
        "id": "dead1f6b.9f955",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "get-resources->",
        "links": [
            "10aa970f.91a6a9",
            "258a7e01.840692",
            "3349a57a.fdd2ca",
            "38006924.8252c6",
            "4ec4209b.eb979",
            "7e44def5.a8a58",
            "a66e0af6.7ebf78",
            "b51d6807.52f3e8",
            "fef26247.8b1b3"
        ],
        "x": 495,
        "y": 400,
        "wires": []
    },
    {
        "id": "3875fab7.913e46",
        "type": "catch",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-in error",
        "scope": [
            "a6c154b9.d44ac8"
        ],
        "uncaught": false,
        "x": 170,
        "y": 1160,
        "wires": [
            [
                "607afd0d.e45c64"
            ]
        ]
    },
    {
        "id": "607afd0d.e45c64",
        "type": "debug",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-in error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 380,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1329ac97.39e4b3",
        "type": "catch",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-out error",
        "scope": [
            "217651cb.fb5fbe"
        ],
        "uncaught": false,
        "x": 920,
        "y": 1149,
        "wires": [
            [
                "2f8e7cba.8a9a94"
            ]
        ]
    },
    {
        "id": "2f8e7cba.8a9a94",
        "type": "debug",
        "z": "db6d41ec.358a7",
        "name": "Aloes-Client-out error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1120,
        "y": 1149,
        "wires": []
    },
    {
        "id": "ec768fa1.b60d1",
        "type": "function",
        "z": "db6d41ec.358a7",
        "name": "update-client-status",
        "func": "try {\n    const storeType = \"file\";\n    let status = false;\n    if (msg.status && msg.status.text && msg.status.text.startsWith(\"node-red:common.status.\")) {\n        if (msg.status.text.endsWith(\"disconnected\")) {\n            status = false;\n        } else if (msg.status.text.endsWith(\"connected\")) {\n            status = true;\n        } \n    }\n    const storeKey = `aloesClientStatus`;\n    let prevConnStatus;\n    global.get(storeKey, storeType, (err, res) => {\n        if(err) throw err;\n        prevConnStatus = res\n    });\n    \n    if (!status || status !== prevConnStatus) {\n        // change Client Id\n        const userId = env.get(\"ALOES_USER_ID\");\n        const clientId = `${userId}-${Math.random().toString(16).substr(2, 8)}`;\n        flow.set(\"client-id\", clientId);\n        const processEnv = global.get(\"processEnv\");\n        if (processEnv) processEnv.ALOES_CLIENT_ID = clientId;\n    } else {\n        const clientId = flow.get(\"client-id\") || `${env.get(\"ALOES_USER_ID\")}-${Math.random().toString(16).substr(2, 8)}`;\n        const processEnv = global.get(\"processEnv\");\n        if (processEnv) processEnv.ALOES_CLIENT_ID = clientId;\n    }\n    \n    global.set(storeKey, status, storeType, (err) => {\n        if(err) throw err;\n    });\n    return msg;\n} catch(error){\n    //  console.log('error', error);\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "130621a2.ea60ce",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "->node-red-http-in",
        "links": [
            "26964589.1da45a",
            "f0f0bfb2.dac5c"
        ],
        "x": 95,
        "y": 940,
        "wires": [
            [
                "62390c30.03b5b4"
            ]
        ]
    },
    {
        "id": "f1b2081d.940138",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "node-red-http-in->",
        "links": [],
        "x": 455,
        "y": 940,
        "wires": []
    },
    {
        "id": "26964589.1da45a",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "reboot-app",
        "links": [
            "130621a2.ea60ce"
        ],
        "x": 1115,
        "y": 280,
        "wires": []
    },
    {
        "id": "3fffa9d2.772006",
        "type": "comment",
        "z": "db6d41ec.358a7",
        "name": "MQTT OUT",
        "info": "Wait for valid device/sensor instance to send via MQTT\n\nUse update-instance node before, to validate your instance.\n",
        "x": 890,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ec453fea.6d78d",
        "type": "comment",
        "z": "db6d41ec.358a7",
        "name": "HTTP IN",
        "info": "",
        "x": 140,
        "y": 860,
        "wires": []
    },
    {
        "id": "186dff98.95929",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "refresh-state",
        "links": [
            "55672bec.c16da4",
            "b026d0fe.9224e",
            "d3dab247.45bb5",
            "957fcaee.81c6d8",
            "d8d1020b.c8e43",
            "e578fa3d.081548"
        ],
        "x": 1115,
        "y": 160,
        "wires": []
    },
    {
        "id": "f9571b19.9ce7b8",
        "type": "subflow:9efc52fb.fd653",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [
            {
                "name": "store_type",
                "value": "NODE_RED_STORE_TYPE",
                "type": "env"
            }
        ],
        "x": 970,
        "y": 260,
        "wires": [
            [
                "6a6729ce.01a908"
            ],
            [
                "26964589.1da45a"
            ]
        ]
    },
    {
        "id": "fbfd06de.bb3028",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "->node-red-settings-interface",
        "links": [
            "f6df1cad.76caa"
        ],
        "x": 755,
        "y": 260,
        "wires": [
            [
                "f9571b19.9ce7b8"
            ]
        ]
    },
    {
        "id": "f6df1cad.76caa",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "boot-app",
        "links": [
            "55672bec.c16da4",
            "fbfd06de.bb3028",
            "5b949eb3.216f9",
            "b026d0fe.9224e",
            "d3dab247.45bb5",
            "957fcaee.81c6d8",
            "d8d1020b.c8e43",
            "e578fa3d.081548"
        ],
        "x": 315,
        "y": 140,
        "wires": []
    },
    {
        "id": "b31b403c.ee0e3",
        "type": "subflow:f64c7b58.f8e8a8",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [
            {
                "name": "store_type",
                "value": "NODE_RED_STORE_TYPE",
                "type": "env"
            }
        ],
        "x": 960,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a31e41ce.1160e",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "before-save-env-vars",
        "links": [
            "d9b64c61.9d87e",
            "6a6729ce.01a908"
        ],
        "x": 755,
        "y": 400,
        "wires": [
            [
                "b31b403c.ee0e3"
            ]
        ]
    },
    {
        "id": "1f069c1e.e824e4",
        "type": "debug",
        "z": "db6d41ec.358a7",
        "name": "INIT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 490,
        "y": 280,
        "wires": []
    },
    {
        "id": "bc6a8c01.27b52",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "after-state-init",
        "links": [
            "47e1064b.d2332",
            "bae2504a.c7f51",
            "927cab1e.3fc8e8"
        ],
        "x": 495,
        "y": 240,
        "wires": []
    },
    {
        "id": "55672bec.c16da4",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "before-state-init",
        "links": [
            "186dff98.95929",
            "f6df1cad.76caa",
            "c466b8fd.1ffd68",
            "104ff5e.f177c0a",
            "f561ddd7.4dfdf",
            "2955ab32.62c124"
        ],
        "x": 95,
        "y": 240,
        "wires": [
            [
                "43f259e1.02d918"
            ]
        ]
    },
    {
        "id": "6a6729ce.01a908",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "node-red-settings-interface->",
        "links": [
            "a31e41ce.1160e"
        ],
        "x": 1115,
        "y": 240,
        "wires": []
    },
    {
        "id": "43f259e1.02d918",
        "type": "subflow:ee9e0cea.d1206",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [
            {
                "name": "debug",
                "value": "false",
                "type": "bool"
            },
            {
                "name": "store_type",
                "value": "file",
                "type": "str"
            }
        ],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "bc6a8c01.27b52",
                "1f069c1e.e824e4"
            ]
        ]
    },
    {
        "id": "3ff72d1a.ab2eb2",
        "type": "ui_template",
        "z": "db6d41ec.358a7",
        "group": "a021c151.289ce",
        "name": "clock-toolbar",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    } else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleString());\n    }\n    if(document.clockInterval){ \n        clearInterval(document.clockInterval);\n        document.clockInterval = null;\n    }\n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "global",
        "x": 550,
        "y": 139,
        "wires": [
            []
        ]
    },
    {
        "id": "b026d0fe.9224e",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "->get-resources",
        "links": [
            "186dff98.95929",
            "f6df1cad.76caa"
        ],
        "x": 95,
        "y": 400,
        "wires": [
            [
                "8ca276b4.1ece38"
            ]
        ]
    },
    {
        "id": "69821fcd.3dc9b",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "->aloes-client-tx",
        "links": [
            "17625f77.c39e19",
            "42f328f2.4986c",
            "50786ea8.975ed8",
            "5c7cf5f.adce38c",
            "631f2527.8a4fa4",
            "63e91f51.2a63f8",
            "6c09c26b.bdfcc4",
            "72660de4.09c724",
            "7d1c2d5e.a37c34",
            "7df6bf99.a3917",
            "9c8badc1.142c58",
            "a02e7fa9.b1429",
            "a5a0fd30.86f5d",
            "aae5464a.93cca8",
            "ad363258.b2a1",
            "b4817e4a.8a9ac",
            "d08b5958.afca58",
            "e3524727.708a48",
            "e4c24259.eb0ec8",
            "ef60d46d.15c",
            "73d5a4cc.40e764",
            "37a4f5cb.6291aa",
            "7f6a74a7.8fc53c",
            "a62ea535.5d7a3",
            "7d26ff65.f548b",
            "45c55bb4.626f74",
            "d103ea64.d8dbc8",
            "b7380877.548d4",
            "fdb34fa4.acc928",
            "8fabd489.7c0f5",
            "df392138.8a9968",
            "32622a3d.bfbe86",
            "5a520130.6f664",
            "84062f9d.52f448",
            "d9c7db29.a4727",
            "f0839665.c2db88",
            "b25c8382.fb04e8",
            "6c26969f.f6d448",
            "3dcd0528.576eea",
            "e99b8d8.3eecff",
            "fdd45d9c.a23f6",
            "b17053a3.86c86",
            "b5fb3768.2beae8",
            "dddde6ed.a17458",
            "bd310267.4efb8",
            "5b51d0e3.439b2",
            "3177a4ab.3e2eec",
            "4c85ecb2.da6544",
            "d1f2c218.13853",
            "c1debd8d.6d078"
        ],
        "x": 835,
        "y": 1360,
        "wires": [
            [
                "334f0c53.386e04"
            ]
        ]
    },
    {
        "id": "99d41e81.47a6d",
        "type": "subflow:fbfe0691.2c23a8",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [
            {
                "name": "debug",
                "value": "false",
                "type": "bool"
            }
        ],
        "x": 310,
        "y": 520,
        "wires": [
            [
                "231c94d3.011dac"
            ]
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "d3dab247.45bb5",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "->get-measurements",
        "links": [
            "186dff98.95929",
            "f6df1cad.76caa"
        ],
        "x": 95,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "231c94d3.011dac",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "get-measurements->",
        "links": [
            "511f392e.da52f",
            "a89450f3.3912e8",
            "e1c656a7.fc7008",
            "ac485d96.b7d278",
            "bde0c443.ed9eb8",
            "4df484f0.fb1624",
            "a005e74d.e2165",
            "79c31aa3.d8c0d4",
            "f41808ed.86da98",
            "5258e1df.b27f78",
            "3dd0bc7.9d16ec4",
            "8605dbb1.3f11a8",
            "30a5ed58.ae3d2a",
            "ff4aab68.2148a",
            "c9db4a65.03a608",
            "8a7c8514.83b33",
            "269880b7.fa8da",
            "5345f387.85cefc",
            "5da4e55c.cf0d44",
            "15f715f5.1bec32",
            "8242c35f.adad8",
            "3e681330.7cec44",
            "5ada657f.598c54",
            "9cbf0f62.a6c9b8",
            "d77ef8ee.a7223",
            "476d8314.8b9bec",
            "a00b4c72.1bbe88",
            "201091ca.6c0576",
            "ba3d0de.378857",
            "94f04601.84c6d",
            "51fd69f8.54238",
            "b084255e.64af08",
            "5b22c72f.2a27a8",
            "bf3129d6.c2d22",
            "6b0bb636.7f4888",
            "b2bea352.7090e",
            "9e140969.02703",
            "695d50a5.85e6e8",
            "c9f0107e.7a5b9",
            "3e285989.0d473e",
            "25900e40.97fe7a",
            "f3fd8d9e.07228",
            "ac888a4a.22f57",
            "a5a8ac30.c195a",
            "5de6d433.77b7bc",
            "e7dfbc92.40a81",
            "a955c9f9.ed1638",
            "3be8b62.24a9d4a",
            "f2c6ab6a.355f",
            "a9a7d843.849898",
            "6d3f96d4.bc158"
        ],
        "x": 495,
        "y": 520,
        "wires": []
    },
    {
        "id": "80c65f2.8c69aa",
        "type": "comment",
        "z": "db6d41ec.358a7",
        "name": "Interfaces Router",
        "info": "",
        "x": 160,
        "y": 720,
        "wires": []
    },
    {
        "id": "c5ea44f.90231b8",
        "type": "ui_ui_control",
        "z": "db6d41ec.358a7",
        "name": "init-ui",
        "x": 350,
        "y": 780,
        "wires": [
            [
                "fd369441.63f808"
            ]
        ]
    },
    {
        "id": "d1d8c9ab.423ba8",
        "type": "inject",
        "z": "db6d41ec.358a7",
        "name": "landing page",
        "topic": "",
        "payload": "{\"tab\":\"status\",\"tabs\":{\"show\":[\"settings\"]}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 780,
        "wires": [
            [
                "c5ea44f.90231b8"
            ]
        ]
    },
    {
        "id": "fd369441.63f808",
        "type": "subflow:dabefe0c.eebd7",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [],
        "x": 500,
        "y": 780,
        "wires": [
            [
                "2955ab32.62c124"
            ],
            [
                "4ca56cc1.49a954"
            ],
            []
        ]
    },
    {
        "id": "4ca56cc1.49a954",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "router-trigger->",
        "links": [
            "ec118092.5a618",
            "fde75076.9a278",
            "fab7684e.48e9d8",
            "2de32ac2.27aa66",
            "d032f752.265328",
            "18c313aa.647b5c",
            "2dd3d0a0.37ecf",
            "3564481d.8ef888",
            "bc773cee.ec98f"
        ],
        "x": 635,
        "y": 780,
        "wires": []
    },
    {
        "id": "2955ab32.62c124",
        "type": "link out",
        "z": "db6d41ec.358a7",
        "name": "reload-state",
        "links": [
            "55672bec.c16da4",
            "957fcaee.81c6d8",
            "d8d1020b.c8e43"
        ],
        "x": 635,
        "y": 740,
        "wires": []
    },
    {
        "id": "35c02ca1.2bf314",
        "type": "subflow:31bb48b9.494fa8",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [],
        "x": 950,
        "y": 160,
        "wires": [
            [
                "186dff98.95929"
            ]
        ]
    },
    {
        "id": "927cab1e.3fc8e8",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "->aloes-status-interface",
        "links": [
            "bc6a8c01.27b52"
        ],
        "x": 755,
        "y": 160,
        "wires": [
            [
                "35c02ca1.2bf314"
            ]
        ]
    },
    {
        "id": "6972eb9e.330cc4",
        "type": "subflow:bd375408.2f8e08",
        "z": "db6d41ec.358a7",
        "name": "",
        "env": [],
        "x": 300,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "e578fa3d.081548",
        "type": "link in",
        "z": "db6d41ec.358a7",
        "name": "->get-oma-ref",
        "links": [
            "186dff98.95929",
            "f6df1cad.76caa"
        ],
        "x": 95,
        "y": 620,
        "wires": [
            [
                "6972eb9e.330cc4"
            ]
        ]
    },
    {
        "id": "334f0c53.386e04",
        "type": "aloes-tx",
        "z": "db6d41ec.358a7",
        "name": "",
        "aloesNetwork": "6b56f1ad.0e8ae8",
        "qos": 0,
        "retain": "",
        "x": 960,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e525c918.5a8cc8",
        "type": "aloes-rx",
        "z": "db6d41ec.358a7",
        "name": "",
        "aloesNetwork": "6b56f1ad.0e8ae8",
        "qos": "0",
        "datatype": "json",
        "collection": "",
        "x": 140,
        "y": 1360,
        "wires": [
            [
                "7246684d.40ee78"
            ]
        ]
    },
    {
        "id": "8ca276b4.1ece38",
        "type": "get-aloes-devices",
        "z": "db6d41ec.358a7",
        "name": "get-devices",
        "aloesNetwork": "6b56f1ad.0e8ae8",
        "preferredApi": "graph",
        "includeSensors": "true",
        "includeSensorsResources": "true",
        "x": 290,
        "y": 400,
        "wires": [
            [
                "dead1f6b.9f955"
            ]
        ]
    },
    {
        "id": "a021c151.289ce",
        "type": "ui_group",
        "name": "Group",
        "tab": "f6f0242.21726d8",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "6b56f1ad.0e8ae8",
        "type": "aloes-network",
        "z": "",
        "name": "aloes-prod",
        "httpHost": "aloes.io",
        "httpPort": "443",
        "httpApiRoot": "/app/api",
        "httpSecure": true,
        "mqttHost": "aloes.io",
        "mqttPort": "8883",
        "mqttSecure": true,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true
    }
]