[
  {
    "id": "81242ff.bcdebd",
    "type": "function",
    "z": "3d1ef71f.e0163",
    "name": "setBoolean",
    "func": "try {\n    const debug = env.get(\"debug\");\n    if (!msg || msg === null || !msg.sensor) throw new Error(\"No input to parse\");\n    const resourceId = env.get(\"resource_id\");\n    if (!resourceId) throw new Error(\"no resource id set\")\n    const value = msg.sensor.resources[resourceId];\n    //  const value = msg.sensor.value;\n    if (typeof value === \"string\") {\n        msg.payload = value; \n    } else if (typeof value === \"number\") {\n        msg.payload = value.toString(); \n    } else if (typeof value === \"boolean\") {\n        msg.payload = value; \n    } else if (typeof value === \"object\" && value.type && value.data){\n        msg.payload = value.data.toString('utf-8');\n    } else if (Buffer.isBuffer(value)){\n        msg.payload = value.toString('utf-8');\n    } else {\n        throw new Error(\"No value found\")\n    }\n    if (msg.payload === \"true\" || msg.payload === \"1\" || msg.payload === 1) {\n        msg.payload = true;\n    } else if (msg.payload === \"false\" || msg.payload === \"0\" || msg.payload === 0) {\n        msg.payload = false;\n    }\n    if (debug) {\n        console.log(`set-boolean for ${resourceId} : ${msg.payload}`)\n    }\n    return msg;\n} catch(error) {\n    return error;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 550,
    "y": 120,
    "wires": [[]]
  }
]
